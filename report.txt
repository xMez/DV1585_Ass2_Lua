State 8 conflicts: 3 shift/reduce
State 17 conflicts: 1 shift/reduce
State 22 conflicts: 1 reduce/reduce
State 36 conflicts: 1 shift/reduce
State 37 conflicts: 1 shift/reduce
State 43 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 45 conflicts: 6 shift/reduce
State 46 conflicts: 1 shift/reduce
State 47 conflicts: 2 shift/reduce
State 48 conflicts: 3 shift/reduce
State 50 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 65 conflicts: 19 reduce/reduce
State 67 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce, 37 reduce/reduce
State 87 conflicts: 1 shift/reduce, 37 reduce/reduce
State 88 conflicts: 1 shift/reduce, 37 reduce/reduce
State 94 conflicts: 3 reduce/reduce
State 128 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 151 conflicts: 1 shift/reduce, 37 reduce/reduce
State 152 conflicts: 6 shift/reduce, 37 reduce/reduce
State 153 conflicts: 1 shift/reduce, 37 reduce/reduce
State 154 conflicts: 1 shift/reduce, 37 reduce/reduce
State 155 conflicts: 1 shift/reduce, 37 reduce/reduce
State 156 conflicts: 1 shift/reduce, 37 reduce/reduce
State 157 conflicts: 1 shift/reduce, 37 reduce/reduce
State 158 conflicts: 1 shift/reduce, 37 reduce/reduce
State 159 conflicts: 2 shift/reduce, 37 reduce/reduce
State 160 conflicts: 3 shift/reduce, 37 reduce/reduce
State 161 conflicts: 3 shift/reduce, 37 reduce/reduce
State 162 conflicts: 37 reduce/reduce
State 163 conflicts: 37 reduce/reduce
State 164 conflicts: 37 reduce/reduce
State 165 conflicts: 37 reduce/reduce
State 168 conflicts: 1 shift/reduce
State 169 conflicts: 17 reduce/reduce
State 175 conflicts: 19 reduce/reduce
State 186 conflicts: 3 reduce/reduce
State 197 conflicts: 2 shift/reduce
State 199 conflicts: 3 reduce/reduce
State 204 conflicts: 1 shift/reduce


Grammar

    0 $accept: block "end of file"

    1 block: chunk

    2 chunk: optchunk laststat
    3      | optchunk
    4      | laststat

    5 optchunk: stat optsemi
    6         | chunk stat optsemi

    7 laststat: RETURN explist optsemi
    8         | RETURN optsemi
    9         | BREAK optsemi

   10 optsemi: SEMI
   11        | %empty

   12 stat: varlist ASSIGN explist
   13     | functioncall
   14     | DO block END
   15     | WHILE exp DO block END
   16     | REPEAT block UNTIL exp
   17     | ifexp optelseif optelse END
   18     | FOR name ASSIGN exp COMMA exp DO block END
   19     | FOR name ASSIGN exp COMMA exp COMMA exp DO block END
   20     | FOR namelist IN explist DO block END
   21     | FUNCTION funcnamelist funcbody
   22     | LOCAL FUNCTION name funcbody
   23     | LOCAL namelist
   24     | LOCAL namelist ASSIGN explist

   25 ifexp: IF exp THEN block

   26 optelseif: elseif
   27          | optelseif elseif
   28          | %empty

   29 elseif: ELSEIF exp THEN block

   30 optelse: ELSE block
   31        | %empty

   32 funcnamelist: funcname
   33             | funcname COLON name

   34 funcname: name
   35         | funcname DOT name

   36 varlist: var
   37        | varlist COMMA var

   38 var: name
   39    | prefixexp BRACK_L exp BRACK_R
   40    | prefixexp DOT name

   41 namelist: name
   42         | namelist COMMA name

   43 name: NAME

   44 explist: exp
   45        | explist COMMA exp

   46 exp: NIL
   47    | FALSE
   48    | TRUE
   49    | NUMBER
   50    | string
   51    | TDOT
   52    | function
   53    | prefixexp
   54    | tableconstructor
   55    | ops

   56 prefixexp: var
   57          | functioncall
   58          | PARA_L exp PARA_R

   59 functioncall: prefixexp args
   60             | prefixexp COLON name args

   61 args: PARA_L PARA_R
   62     | PARA_L explist PARA_R
   63     | tableconstructor
   64     | string

   65 function: FUNCTION funcbody

   66 funcbody: PARA_L parlist PARA_R block END
   67         | PARA_L PARA_R block END

   68 parlist: namelist
   69        | namelist COMMA TDOT
   70        | TDOT

   71 tableconstructor: BRACE_L fieldlistexp BRACE_R
   72                 | BRACE_L BRACE_R

   73 fieldlistexp: fieldlist optfieldsep

   74 fieldlist: field
   75          | fieldlist fieldsep field

   76 field: BRACK_L exp BRACK_R ASSIGN exp
   77      | name ASSIGN exp
   78      | exp

   79 fieldsep: COMMA
   80         | SEMI

   81 optfieldsep: fieldsep
   82            | %empty

   83 string: STRING

   84 ops: ops_1

   85 ops_1: ops_1 OR ops_2
   86      | ops_2

   87 ops_2: ops_2 AND ops_3
   88      | ops_3

   89 ops_3: ops_3 LESS_THAN ops_4
   90      | ops_3 MORE_THAN ops_4
   91      | ops_3 LESS_EQUAL_THAN ops_4
   92      | ops_3 MORE_EQUAL_THAN ops_4
   93      | ops_3 TILDE_EQUAL ops_4
   94      | ops_3 EQUAL ops_4
   95      | ops_4

   96 ops_4: ops_4 CONCAT ops_5
   97      | ops_5

   98 ops_5: ops_5 PLUS ops_6
   99      | ops_5 MIN ops_6
  100      | ops_6

  101 ops_6: ops_6 MUL ops_7
  102      | ops_6 DIV ops_7
  103      | ops_6 MOD ops_7
  104      | ops_7

  105 ops_7: NOT ops_8
  106      | LEN ops_8
  107      | MIN ops_8
  108      | ops_8

  109 ops_8: ops_8 POW ops_9
  110      | ops_9

  111 ops_9: exp


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
DO (258) 14 15 18 19 20
WHILE (259) 15
FOR (260) 18 19 20
UNTIL (261) 16
REPEAT (262) 16
END (263) 14 15 17 18 19 20 66 67
IN (264) 20
IF (265) 25
THEN (266) 25 29
ELSEIF (267) 29
ELSE (268) 30
PLUS (269) 98
MIN (270) 99 107
MUL (271) 101
DIV (272) 102
POW (273) 109
MOD (274) 103
EQUAL (275) 94
LESS_THAN (276) 89
MORE_THAN (277) 90
LESS_EQUAL_THAN (278) 91
MORE_EQUAL_THAN (279) 92
TILDE_EQUAL (280) 93
CONCAT (281) 96
AND (282) 87
OR (283) 85
LEN (284) 106
NOT (285) 105
LOCAL (286) 22 23 24
FUNCTION (287) 21 22 65
RETURN (288) 7 8
BREAK (289) 9
NIL (290) 46
FALSE (291) 47
TRUE (292) 48
NUMBER (293) 49
STRING (294) 83
TDOT (295) 51 69 70
NAME (296) 43
ASSIGN (297) 12 18 19 24 76 77
DOT (298) 35 40
COLON (299) 33 60
COMMA (300) 18 19 37 42 45 69 79
SEMI (301) 10 80
PARA_L (302) 58 61 62 66 67
PARA_R (303) 58 61 62 66 67
BRACE_L (304) 71 72
BRACE_R (305) 71 72
BRACK_L (306) 39 76
BRACK_R (307) 39 76


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
block (54)
    on left: 1, on right: 0 14 15 16 18 19 20 25 29 30 66 67
chunk (55)
    on left: 2 3 4, on right: 1 6
optchunk (56)
    on left: 5 6, on right: 2 3
laststat (57)
    on left: 7 8 9, on right: 2 4
optsemi (58)
    on left: 10 11, on right: 5 6 7 8 9
stat (59)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24, on right: 5 6
ifexp (60)
    on left: 25, on right: 17
optelseif (61)
    on left: 26 27 28, on right: 17 27
elseif (62)
    on left: 29, on right: 26 27
optelse (63)
    on left: 30 31, on right: 17
funcnamelist (64)
    on left: 32 33, on right: 21
funcname (65)
    on left: 34 35, on right: 32 33 35
varlist (66)
    on left: 36 37, on right: 12 37
var (67)
    on left: 38 39 40, on right: 36 37 56
namelist (68)
    on left: 41 42, on right: 20 23 24 42 68 69
name (69)
    on left: 43, on right: 18 19 22 33 34 35 38 40 41 42 60 77
explist (70)
    on left: 44 45, on right: 7 12 20 24 45 62
exp (71)
    on left: 46 47 48 49 50 51 52 53 54 55, on right: 15 16 18 19 25
    29 39 44 45 58 76 77 78 111
prefixexp (72)
    on left: 56 57 58, on right: 39 40 53 59 60
functioncall (73)
    on left: 59 60, on right: 13 57
args (74)
    on left: 61 62 63 64, on right: 59 60
function (75)
    on left: 65, on right: 52
funcbody (76)
    on left: 66 67, on right: 21 22 65
parlist (77)
    on left: 68 69 70, on right: 66
tableconstructor (78)
    on left: 71 72, on right: 54 63
fieldlistexp (79)
    on left: 73, on right: 71
fieldlist (80)
    on left: 74 75, on right: 73 75
field (81)
    on left: 76 77 78, on right: 74 75
fieldsep (82)
    on left: 79 80, on right: 75 81
optfieldsep (83)
    on left: 81 82, on right: 73
string (84)
    on left: 83, on right: 50 64
ops (85)
    on left: 84, on right: 55
ops_1 (86)
    on left: 85 86, on right: 84 85
ops_2 (87)
    on left: 87 88, on right: 85 86 87
ops_3 (88)
    on left: 89 90 91 92 93 94 95, on right: 87 88 89 90 91 92 93 94
ops_4 (89)
    on left: 96 97, on right: 89 90 91 92 93 94 95 96
ops_5 (90)
    on left: 98 99 100, on right: 96 97 98 99
ops_6 (91)
    on left: 101 102 103 104, on right: 98 99 100 101 102 103
ops_7 (92)
    on left: 105 106 107 108, on right: 101 102 103 104
ops_8 (93)
    on left: 109 110, on right: 105 106 107 108 109
ops_9 (94)
    on left: 111, on right: 109 110


State 0

    0 $accept: . block "end of file"

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 12
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 1

   14 stat: DO . block END

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 23
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 2

   15 stat: WHILE . exp DO block END

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 36
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 3

   18 stat: FOR . name ASSIGN exp COMMA exp DO block END
   19     | FOR . name ASSIGN exp COMMA exp COMMA exp DO block END
   20     | FOR . namelist IN explist DO block END

    NAME  shift, and go to state 10

    namelist  go to state 52
    name      go to state 53


State 4

   16 stat: REPEAT . block UNTIL exp

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 54
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 5

   25 ifexp: IF . exp THEN block

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 55
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 6

   22 stat: LOCAL . FUNCTION name funcbody
   23     | LOCAL . namelist
   24     | LOCAL . namelist ASSIGN explist

    FUNCTION  shift, and go to state 56
    NAME      shift, and go to state 10

    namelist  go to state 57
    name      go to state 58


State 7

   21 stat: FUNCTION . funcnamelist funcbody

    NAME  shift, and go to state 10

    funcnamelist  go to state 59
    funcname      go to state 60
    name          go to state 61


State 8

    7 laststat: RETURN . explist optsemi
    8         | RETURN . optsemi

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    SEMI      shift, and go to state 62
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    FUNCTION  [reduce using rule 11 (optsemi)]
    NAME      [reduce using rule 11 (optsemi)]
    PARA_L    [reduce using rule 11 (optsemi)]
    $default  reduce using rule 11 (optsemi)

    optsemi           go to state 63
    var               go to state 35
    name              go to state 20
    explist           go to state 64
    exp               go to state 65
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 9

    9 laststat: BREAK . optsemi

    SEMI  shift, and go to state 62

    $default  reduce using rule 11 (optsemi)

    optsemi  go to state 66


State 10

   43 name: NAME .

    $default  reduce using rule 43 (name)


State 11

   58 prefixexp: PARA_L . exp PARA_R

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 67
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 12

    0 $accept: block . "end of file"

    "end of file"  shift, and go to state 68


State 13

    1 block: chunk .
    6 optchunk: chunk . stat optsemi

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    $default  reduce using rule 1 (block)

    stat          go to state 69
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 14

    2 chunk: optchunk . laststat
    3      | optchunk .

    RETURN  shift, and go to state 8
    BREAK   shift, and go to state 9

    $default  reduce using rule 3 (chunk)

    laststat  go to state 70


State 15

    4 chunk: laststat .

    $default  reduce using rule 4 (chunk)


State 16

    5 optchunk: stat . optsemi

    SEMI  shift, and go to state 62

    $default  reduce using rule 11 (optsemi)

    optsemi  go to state 71


State 17

   17 stat: ifexp . optelseif optelse END

    ELSEIF  shift, and go to state 72

    ELSEIF    [reduce using rule 28 (optelseif)]
    $default  reduce using rule 28 (optelseif)

    optelseif  go to state 73
    elseif     go to state 74


State 18

   12 stat: varlist . ASSIGN explist
   37 varlist: varlist . COMMA var

    ASSIGN  shift, and go to state 75
    COMMA   shift, and go to state 76


State 19

   36 varlist: var .
   56 prefixexp: var .

    ASSIGN    reduce using rule 36 (varlist)
    COMMA     reduce using rule 36 (varlist)
    $default  reduce using rule 56 (prefixexp)


State 20

   38 var: name .

    $default  reduce using rule 38 (var)


State 21

   39 var: prefixexp . BRACK_L exp BRACK_R
   40    | prefixexp . DOT name
   59 functioncall: prefixexp . args
   60             | prefixexp . COLON name args

    STRING   shift, and go to state 32
    DOT      shift, and go to state 77
    COLON    shift, and go to state 78
    PARA_L   shift, and go to state 79
    BRACE_L  shift, and go to state 34
    BRACK_L  shift, and go to state 80

    args              go to state 81
    tableconstructor  go to state 82
    string            go to state 83


State 22

   13 stat: functioncall .
   57 prefixexp: functioncall .

    STRING    reduce using rule 57 (prefixexp)
    DOT       reduce using rule 57 (prefixexp)
    COLON     reduce using rule 57 (prefixexp)
    PARA_L    reduce using rule 13 (stat)
    PARA_L    [reduce using rule 57 (prefixexp)]
    BRACE_L   reduce using rule 57 (prefixexp)
    BRACK_L   reduce using rule 57 (prefixexp)
    $default  reduce using rule 13 (stat)


State 23

   14 stat: DO block . END

    END  shift, and go to state 84


State 24

  107 ops_7: MIN . ops_8

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 86
    ops_9             go to state 51


State 25

  106 ops_7: LEN . ops_8

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 87
    ops_9             go to state 51


State 26

  105 ops_7: NOT . ops_8

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 88
    ops_9             go to state 51


State 27

   65 function: FUNCTION . funcbody

    PARA_L  shift, and go to state 89

    funcbody  go to state 90


State 28

   46 exp: NIL .

    $default  reduce using rule 46 (exp)


State 29

   47 exp: FALSE .

    $default  reduce using rule 47 (exp)


State 30

   48 exp: TRUE .

    $default  reduce using rule 48 (exp)


State 31

   49 exp: NUMBER .

    $default  reduce using rule 49 (exp)


State 32

   83 string: STRING .

    $default  reduce using rule 83 (string)


State 33

   51 exp: TDOT .

    $default  reduce using rule 51 (exp)


State 34

   71 tableconstructor: BRACE_L . fieldlistexp BRACE_R
   72                 | BRACE_L . BRACE_R

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34
    BRACE_R   shift, and go to state 91
    BRACK_L   shift, and go to state 92

    var               go to state 35
    name              go to state 93
    exp               go to state 94
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    fieldlistexp      go to state 95
    fieldlist         go to state 96
    field             go to state 97
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 35

   56 prefixexp: var .

    $default  reduce using rule 56 (prefixexp)


State 36

   15 stat: WHILE exp . DO block END
  111 ops_9: exp .

    DO  shift, and go to state 98

    DO        [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 37

   39 var: prefixexp . BRACK_L exp BRACK_R
   40    | prefixexp . DOT name
   53 exp: prefixexp .
   59 functioncall: prefixexp . args
   60             | prefixexp . COLON name args

    STRING   shift, and go to state 32
    DOT      shift, and go to state 77
    COLON    shift, and go to state 78
    PARA_L   shift, and go to state 79
    BRACE_L  shift, and go to state 34
    BRACK_L  shift, and go to state 80

    PARA_L    [reduce using rule 53 (exp)]
    $default  reduce using rule 53 (exp)

    args              go to state 81
    tableconstructor  go to state 82
    string            go to state 83


State 38

   57 prefixexp: functioncall .

    $default  reduce using rule 57 (prefixexp)


State 39

   52 exp: function .

    $default  reduce using rule 52 (exp)


State 40

   54 exp: tableconstructor .

    $default  reduce using rule 54 (exp)


State 41

   50 exp: string .

    $default  reduce using rule 50 (exp)


State 42

   55 exp: ops .

    $default  reduce using rule 55 (exp)


State 43

   84 ops: ops_1 .
   85 ops_1: ops_1 . OR ops_2

    OR  shift, and go to state 99

    OR        [reduce using rule 84 (ops)]
    $default  reduce using rule 84 (ops)


State 44

   86 ops_1: ops_2 .
   87 ops_2: ops_2 . AND ops_3

    AND  shift, and go to state 100

    AND       [reduce using rule 86 (ops_1)]
    $default  reduce using rule 86 (ops_1)


State 45

   88 ops_2: ops_3 .
   89 ops_3: ops_3 . LESS_THAN ops_4
   90      | ops_3 . MORE_THAN ops_4
   91      | ops_3 . LESS_EQUAL_THAN ops_4
   92      | ops_3 . MORE_EQUAL_THAN ops_4
   93      | ops_3 . TILDE_EQUAL ops_4
   94      | ops_3 . EQUAL ops_4

    EQUAL            shift, and go to state 101
    LESS_THAN        shift, and go to state 102
    MORE_THAN        shift, and go to state 103
    LESS_EQUAL_THAN  shift, and go to state 104
    MORE_EQUAL_THAN  shift, and go to state 105
    TILDE_EQUAL      shift, and go to state 106

    EQUAL            [reduce using rule 88 (ops_2)]
    LESS_THAN        [reduce using rule 88 (ops_2)]
    MORE_THAN        [reduce using rule 88 (ops_2)]
    LESS_EQUAL_THAN  [reduce using rule 88 (ops_2)]
    MORE_EQUAL_THAN  [reduce using rule 88 (ops_2)]
    TILDE_EQUAL      [reduce using rule 88 (ops_2)]
    $default         reduce using rule 88 (ops_2)


State 46

   95 ops_3: ops_4 .
   96 ops_4: ops_4 . CONCAT ops_5

    CONCAT  shift, and go to state 107

    CONCAT    [reduce using rule 95 (ops_3)]
    $default  reduce using rule 95 (ops_3)


State 47

   97 ops_4: ops_5 .
   98 ops_5: ops_5 . PLUS ops_6
   99      | ops_5 . MIN ops_6

    PLUS  shift, and go to state 108
    MIN   shift, and go to state 109

    PLUS      [reduce using rule 97 (ops_4)]
    MIN       [reduce using rule 97 (ops_4)]
    $default  reduce using rule 97 (ops_4)


State 48

  100 ops_5: ops_6 .
  101 ops_6: ops_6 . MUL ops_7
  102      | ops_6 . DIV ops_7
  103      | ops_6 . MOD ops_7

    MUL  shift, and go to state 110
    DIV  shift, and go to state 111
    MOD  shift, and go to state 112

    MUL       [reduce using rule 100 (ops_5)]
    DIV       [reduce using rule 100 (ops_5)]
    MOD       [reduce using rule 100 (ops_5)]
    $default  reduce using rule 100 (ops_5)


State 49

  104 ops_6: ops_7 .

    $default  reduce using rule 104 (ops_6)


State 50

  108 ops_7: ops_8 .
  109 ops_8: ops_8 . POW ops_9

    POW  shift, and go to state 113

    POW       [reduce using rule 108 (ops_7)]
    $default  reduce using rule 108 (ops_7)


State 51

  110 ops_8: ops_9 .

    $default  reduce using rule 110 (ops_8)


State 52

   20 stat: FOR namelist . IN explist DO block END
   42 namelist: namelist . COMMA name

    IN     shift, and go to state 114
    COMMA  shift, and go to state 115


State 53

   18 stat: FOR name . ASSIGN exp COMMA exp DO block END
   19     | FOR name . ASSIGN exp COMMA exp COMMA exp DO block END
   41 namelist: name .

    ASSIGN  shift, and go to state 116

    $default  reduce using rule 41 (namelist)


State 54

   16 stat: REPEAT block . UNTIL exp

    UNTIL  shift, and go to state 117


State 55

   25 ifexp: IF exp . THEN block
  111 ops_9: exp .

    THEN  shift, and go to state 118

    THEN      [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 56

   22 stat: LOCAL FUNCTION . name funcbody

    NAME  shift, and go to state 10

    name  go to state 119


State 57

   23 stat: LOCAL namelist .
   24     | LOCAL namelist . ASSIGN explist
   42 namelist: namelist . COMMA name

    ASSIGN  shift, and go to state 120
    COMMA   shift, and go to state 115

    $default  reduce using rule 23 (stat)


State 58

   41 namelist: name .

    $default  reduce using rule 41 (namelist)


State 59

   21 stat: FUNCTION funcnamelist . funcbody

    PARA_L  shift, and go to state 89

    funcbody  go to state 121


State 60

   32 funcnamelist: funcname .
   33             | funcname . COLON name
   35 funcname: funcname . DOT name

    DOT    shift, and go to state 122
    COLON  shift, and go to state 123

    $default  reduce using rule 32 (funcnamelist)


State 61

   34 funcname: name .

    $default  reduce using rule 34 (funcname)


State 62

   10 optsemi: SEMI .

    $default  reduce using rule 10 (optsemi)


State 63

    8 laststat: RETURN optsemi .

    $default  reduce using rule 8 (laststat)


State 64

    7 laststat: RETURN explist . optsemi
   45 explist: explist . COMMA exp

    COMMA  shift, and go to state 124
    SEMI   shift, and go to state 62

    $default  reduce using rule 11 (optsemi)

    optsemi  go to state 125


State 65

   44 explist: exp .
  111 ops_9: exp .

    "end of file"    reduce using rule 44 (explist)
    "end of file"    [reduce using rule 111 (ops_9)]
    DO               reduce using rule 44 (explist)
    DO               [reduce using rule 111 (ops_9)]
    WHILE            reduce using rule 44 (explist)
    WHILE            [reduce using rule 111 (ops_9)]
    FOR              reduce using rule 44 (explist)
    FOR              [reduce using rule 111 (ops_9)]
    UNTIL            reduce using rule 44 (explist)
    UNTIL            [reduce using rule 111 (ops_9)]
    REPEAT           reduce using rule 44 (explist)
    REPEAT           [reduce using rule 111 (ops_9)]
    END              reduce using rule 44 (explist)
    END              [reduce using rule 111 (ops_9)]
    IF               reduce using rule 44 (explist)
    IF               [reduce using rule 111 (ops_9)]
    ELSEIF           reduce using rule 44 (explist)
    ELSEIF           [reduce using rule 111 (ops_9)]
    ELSE             reduce using rule 44 (explist)
    ELSE             [reduce using rule 111 (ops_9)]
    PLUS             reduce using rule 111 (ops_9)
    MIN              reduce using rule 111 (ops_9)
    MUL              reduce using rule 111 (ops_9)
    DIV              reduce using rule 111 (ops_9)
    POW              reduce using rule 111 (ops_9)
    MOD              reduce using rule 111 (ops_9)
    EQUAL            reduce using rule 111 (ops_9)
    LESS_THAN        reduce using rule 111 (ops_9)
    MORE_THAN        reduce using rule 111 (ops_9)
    LESS_EQUAL_THAN  reduce using rule 111 (ops_9)
    MORE_EQUAL_THAN  reduce using rule 111 (ops_9)
    TILDE_EQUAL      reduce using rule 111 (ops_9)
    CONCAT           reduce using rule 111 (ops_9)
    AND              reduce using rule 111 (ops_9)
    OR               reduce using rule 111 (ops_9)
    LOCAL            reduce using rule 44 (explist)
    LOCAL            [reduce using rule 111 (ops_9)]
    FUNCTION         reduce using rule 44 (explist)
    FUNCTION         [reduce using rule 111 (ops_9)]
    RETURN           reduce using rule 44 (explist)
    RETURN           [reduce using rule 111 (ops_9)]
    BREAK            reduce using rule 44 (explist)
    BREAK            [reduce using rule 111 (ops_9)]
    NAME             reduce using rule 44 (explist)
    NAME             [reduce using rule 111 (ops_9)]
    COMMA            reduce using rule 44 (explist)
    COMMA            [reduce using rule 111 (ops_9)]
    SEMI             reduce using rule 44 (explist)
    SEMI             [reduce using rule 111 (ops_9)]
    PARA_L           reduce using rule 44 (explist)
    PARA_L           [reduce using rule 111 (ops_9)]
    PARA_R           reduce using rule 44 (explist)
    PARA_R           [reduce using rule 111 (ops_9)]
    $default         reduce using rule 44 (explist)


State 66

    9 laststat: BREAK optsemi .

    $default  reduce using rule 9 (laststat)


State 67

   58 prefixexp: PARA_L exp . PARA_R
  111 ops_9: exp .

    PARA_R  shift, and go to state 126

    PARA_R    [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 68

    0 $accept: block "end of file" .

    $default  accept


State 69

    6 optchunk: chunk stat . optsemi

    SEMI  shift, and go to state 62

    $default  reduce using rule 11 (optsemi)

    optsemi  go to state 127


State 70

    2 chunk: optchunk laststat .

    $default  reduce using rule 2 (chunk)


State 71

    5 optchunk: stat optsemi .

    $default  reduce using rule 5 (optchunk)


State 72

   29 elseif: ELSEIF . exp THEN block

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 128
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 73

   17 stat: ifexp optelseif . optelse END
   27 optelseif: optelseif . elseif

    ELSEIF  shift, and go to state 72
    ELSE    shift, and go to state 129

    $default  reduce using rule 31 (optelse)

    elseif   go to state 130
    optelse  go to state 131


State 74

   26 optelseif: elseif .

    $default  reduce using rule 26 (optelseif)


State 75

   12 stat: varlist ASSIGN . explist

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    explist           go to state 132
    exp               go to state 65
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 76

   37 varlist: varlist COMMA . var

    NAME    shift, and go to state 10
    PARA_L  shift, and go to state 11

    var           go to state 133
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 38


State 77

   40 var: prefixexp DOT . name

    NAME  shift, and go to state 10

    name  go to state 134


State 78

   60 functioncall: prefixexp COLON . name args

    NAME  shift, and go to state 10

    name  go to state 135


State 79

   61 args: PARA_L . PARA_R
   62     | PARA_L . explist PARA_R

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    PARA_R    shift, and go to state 136
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    explist           go to state 137
    exp               go to state 65
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 80

   39 var: prefixexp BRACK_L . exp BRACK_R

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 138
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 81

   59 functioncall: prefixexp args .

    $default  reduce using rule 59 (functioncall)


State 82

   63 args: tableconstructor .

    $default  reduce using rule 63 (args)


State 83

   64 args: string .

    $default  reduce using rule 64 (args)


State 84

   14 stat: DO block END .

    $default  reduce using rule 14 (stat)


State 85

  111 ops_9: exp .

    $default  reduce using rule 111 (ops_9)


State 86

  107 ops_7: MIN ops_8 .
  108      | ops_8 .
  109 ops_8: ops_8 . POW ops_9

    POW  shift, and go to state 113

    "end of file"    reduce using rule 107 (ops_7)
    "end of file"    [reduce using rule 108 (ops_7)]
    DO               reduce using rule 107 (ops_7)
    DO               [reduce using rule 108 (ops_7)]
    WHILE            reduce using rule 107 (ops_7)
    WHILE            [reduce using rule 108 (ops_7)]
    FOR              reduce using rule 107 (ops_7)
    FOR              [reduce using rule 108 (ops_7)]
    UNTIL            reduce using rule 107 (ops_7)
    UNTIL            [reduce using rule 108 (ops_7)]
    REPEAT           reduce using rule 107 (ops_7)
    REPEAT           [reduce using rule 108 (ops_7)]
    END              reduce using rule 107 (ops_7)
    END              [reduce using rule 108 (ops_7)]
    IF               reduce using rule 107 (ops_7)
    IF               [reduce using rule 108 (ops_7)]
    THEN             reduce using rule 107 (ops_7)
    THEN             [reduce using rule 108 (ops_7)]
    ELSEIF           reduce using rule 107 (ops_7)
    ELSEIF           [reduce using rule 108 (ops_7)]
    ELSE             reduce using rule 107 (ops_7)
    ELSE             [reduce using rule 108 (ops_7)]
    PLUS             reduce using rule 107 (ops_7)
    PLUS             [reduce using rule 108 (ops_7)]
    MIN              reduce using rule 107 (ops_7)
    MIN              [reduce using rule 108 (ops_7)]
    MUL              reduce using rule 107 (ops_7)
    MUL              [reduce using rule 108 (ops_7)]
    DIV              reduce using rule 107 (ops_7)
    DIV              [reduce using rule 108 (ops_7)]
    POW              [reduce using rule 107 (ops_7)]
    POW              [reduce using rule 108 (ops_7)]
    MOD              reduce using rule 107 (ops_7)
    MOD              [reduce using rule 108 (ops_7)]
    EQUAL            reduce using rule 107 (ops_7)
    EQUAL            [reduce using rule 108 (ops_7)]
    LESS_THAN        reduce using rule 107 (ops_7)
    LESS_THAN        [reduce using rule 108 (ops_7)]
    MORE_THAN        reduce using rule 107 (ops_7)
    MORE_THAN        [reduce using rule 108 (ops_7)]
    LESS_EQUAL_THAN  reduce using rule 107 (ops_7)
    LESS_EQUAL_THAN  [reduce using rule 108 (ops_7)]
    MORE_EQUAL_THAN  reduce using rule 107 (ops_7)
    MORE_EQUAL_THAN  [reduce using rule 108 (ops_7)]
    TILDE_EQUAL      reduce using rule 107 (ops_7)
    TILDE_EQUAL      [reduce using rule 108 (ops_7)]
    CONCAT           reduce using rule 107 (ops_7)
    CONCAT           [reduce using rule 108 (ops_7)]
    AND              reduce using rule 107 (ops_7)
    AND              [reduce using rule 108 (ops_7)]
    OR               reduce using rule 107 (ops_7)
    OR               [reduce using rule 108 (ops_7)]
    LOCAL            reduce using rule 107 (ops_7)
    LOCAL            [reduce using rule 108 (ops_7)]
    FUNCTION         reduce using rule 107 (ops_7)
    FUNCTION         [reduce using rule 108 (ops_7)]
    RETURN           reduce using rule 107 (ops_7)
    RETURN           [reduce using rule 108 (ops_7)]
    BREAK            reduce using rule 107 (ops_7)
    BREAK            [reduce using rule 108 (ops_7)]
    NAME             reduce using rule 107 (ops_7)
    NAME             [reduce using rule 108 (ops_7)]
    COMMA            reduce using rule 107 (ops_7)
    COMMA            [reduce using rule 108 (ops_7)]
    SEMI             reduce using rule 107 (ops_7)
    SEMI             [reduce using rule 108 (ops_7)]
    PARA_L           reduce using rule 107 (ops_7)
    PARA_L           [reduce using rule 108 (ops_7)]
    PARA_R           reduce using rule 107 (ops_7)
    PARA_R           [reduce using rule 108 (ops_7)]
    BRACE_R          reduce using rule 107 (ops_7)
    BRACE_R          [reduce using rule 108 (ops_7)]
    BRACK_R          reduce using rule 107 (ops_7)
    BRACK_R          [reduce using rule 108 (ops_7)]
    $default         reduce using rule 107 (ops_7)


State 87

  106 ops_7: LEN ops_8 .
  108      | ops_8 .
  109 ops_8: ops_8 . POW ops_9

    POW  shift, and go to state 113

    "end of file"    reduce using rule 106 (ops_7)
    "end of file"    [reduce using rule 108 (ops_7)]
    DO               reduce using rule 106 (ops_7)
    DO               [reduce using rule 108 (ops_7)]
    WHILE            reduce using rule 106 (ops_7)
    WHILE            [reduce using rule 108 (ops_7)]
    FOR              reduce using rule 106 (ops_7)
    FOR              [reduce using rule 108 (ops_7)]
    UNTIL            reduce using rule 106 (ops_7)
    UNTIL            [reduce using rule 108 (ops_7)]
    REPEAT           reduce using rule 106 (ops_7)
    REPEAT           [reduce using rule 108 (ops_7)]
    END              reduce using rule 106 (ops_7)
    END              [reduce using rule 108 (ops_7)]
    IF               reduce using rule 106 (ops_7)
    IF               [reduce using rule 108 (ops_7)]
    THEN             reduce using rule 106 (ops_7)
    THEN             [reduce using rule 108 (ops_7)]
    ELSEIF           reduce using rule 106 (ops_7)
    ELSEIF           [reduce using rule 108 (ops_7)]
    ELSE             reduce using rule 106 (ops_7)
    ELSE             [reduce using rule 108 (ops_7)]
    PLUS             reduce using rule 106 (ops_7)
    PLUS             [reduce using rule 108 (ops_7)]
    MIN              reduce using rule 106 (ops_7)
    MIN              [reduce using rule 108 (ops_7)]
    MUL              reduce using rule 106 (ops_7)
    MUL              [reduce using rule 108 (ops_7)]
    DIV              reduce using rule 106 (ops_7)
    DIV              [reduce using rule 108 (ops_7)]
    POW              [reduce using rule 106 (ops_7)]
    POW              [reduce using rule 108 (ops_7)]
    MOD              reduce using rule 106 (ops_7)
    MOD              [reduce using rule 108 (ops_7)]
    EQUAL            reduce using rule 106 (ops_7)
    EQUAL            [reduce using rule 108 (ops_7)]
    LESS_THAN        reduce using rule 106 (ops_7)
    LESS_THAN        [reduce using rule 108 (ops_7)]
    MORE_THAN        reduce using rule 106 (ops_7)
    MORE_THAN        [reduce using rule 108 (ops_7)]
    LESS_EQUAL_THAN  reduce using rule 106 (ops_7)
    LESS_EQUAL_THAN  [reduce using rule 108 (ops_7)]
    MORE_EQUAL_THAN  reduce using rule 106 (ops_7)
    MORE_EQUAL_THAN  [reduce using rule 108 (ops_7)]
    TILDE_EQUAL      reduce using rule 106 (ops_7)
    TILDE_EQUAL      [reduce using rule 108 (ops_7)]
    CONCAT           reduce using rule 106 (ops_7)
    CONCAT           [reduce using rule 108 (ops_7)]
    AND              reduce using rule 106 (ops_7)
    AND              [reduce using rule 108 (ops_7)]
    OR               reduce using rule 106 (ops_7)
    OR               [reduce using rule 108 (ops_7)]
    LOCAL            reduce using rule 106 (ops_7)
    LOCAL            [reduce using rule 108 (ops_7)]
    FUNCTION         reduce using rule 106 (ops_7)
    FUNCTION         [reduce using rule 108 (ops_7)]
    RETURN           reduce using rule 106 (ops_7)
    RETURN           [reduce using rule 108 (ops_7)]
    BREAK            reduce using rule 106 (ops_7)
    BREAK            [reduce using rule 108 (ops_7)]
    NAME             reduce using rule 106 (ops_7)
    NAME             [reduce using rule 108 (ops_7)]
    COMMA            reduce using rule 106 (ops_7)
    COMMA            [reduce using rule 108 (ops_7)]
    SEMI             reduce using rule 106 (ops_7)
    SEMI             [reduce using rule 108 (ops_7)]
    PARA_L           reduce using rule 106 (ops_7)
    PARA_L           [reduce using rule 108 (ops_7)]
    PARA_R           reduce using rule 106 (ops_7)
    PARA_R           [reduce using rule 108 (ops_7)]
    BRACE_R          reduce using rule 106 (ops_7)
    BRACE_R          [reduce using rule 108 (ops_7)]
    BRACK_R          reduce using rule 106 (ops_7)
    BRACK_R          [reduce using rule 108 (ops_7)]
    $default         reduce using rule 106 (ops_7)


State 88

  105 ops_7: NOT ops_8 .
  108      | ops_8 .
  109 ops_8: ops_8 . POW ops_9

    POW  shift, and go to state 113

    "end of file"    reduce using rule 105 (ops_7)
    "end of file"    [reduce using rule 108 (ops_7)]
    DO               reduce using rule 105 (ops_7)
    DO               [reduce using rule 108 (ops_7)]
    WHILE            reduce using rule 105 (ops_7)
    WHILE            [reduce using rule 108 (ops_7)]
    FOR              reduce using rule 105 (ops_7)
    FOR              [reduce using rule 108 (ops_7)]
    UNTIL            reduce using rule 105 (ops_7)
    UNTIL            [reduce using rule 108 (ops_7)]
    REPEAT           reduce using rule 105 (ops_7)
    REPEAT           [reduce using rule 108 (ops_7)]
    END              reduce using rule 105 (ops_7)
    END              [reduce using rule 108 (ops_7)]
    IF               reduce using rule 105 (ops_7)
    IF               [reduce using rule 108 (ops_7)]
    THEN             reduce using rule 105 (ops_7)
    THEN             [reduce using rule 108 (ops_7)]
    ELSEIF           reduce using rule 105 (ops_7)
    ELSEIF           [reduce using rule 108 (ops_7)]
    ELSE             reduce using rule 105 (ops_7)
    ELSE             [reduce using rule 108 (ops_7)]
    PLUS             reduce using rule 105 (ops_7)
    PLUS             [reduce using rule 108 (ops_7)]
    MIN              reduce using rule 105 (ops_7)
    MIN              [reduce using rule 108 (ops_7)]
    MUL              reduce using rule 105 (ops_7)
    MUL              [reduce using rule 108 (ops_7)]
    DIV              reduce using rule 105 (ops_7)
    DIV              [reduce using rule 108 (ops_7)]
    POW              [reduce using rule 105 (ops_7)]
    POW              [reduce using rule 108 (ops_7)]
    MOD              reduce using rule 105 (ops_7)
    MOD              [reduce using rule 108 (ops_7)]
    EQUAL            reduce using rule 105 (ops_7)
    EQUAL            [reduce using rule 108 (ops_7)]
    LESS_THAN        reduce using rule 105 (ops_7)
    LESS_THAN        [reduce using rule 108 (ops_7)]
    MORE_THAN        reduce using rule 105 (ops_7)
    MORE_THAN        [reduce using rule 108 (ops_7)]
    LESS_EQUAL_THAN  reduce using rule 105 (ops_7)
    LESS_EQUAL_THAN  [reduce using rule 108 (ops_7)]
    MORE_EQUAL_THAN  reduce using rule 105 (ops_7)
    MORE_EQUAL_THAN  [reduce using rule 108 (ops_7)]
    TILDE_EQUAL      reduce using rule 105 (ops_7)
    TILDE_EQUAL      [reduce using rule 108 (ops_7)]
    CONCAT           reduce using rule 105 (ops_7)
    CONCAT           [reduce using rule 108 (ops_7)]
    AND              reduce using rule 105 (ops_7)
    AND              [reduce using rule 108 (ops_7)]
    OR               reduce using rule 105 (ops_7)
    OR               [reduce using rule 108 (ops_7)]
    LOCAL            reduce using rule 105 (ops_7)
    LOCAL            [reduce using rule 108 (ops_7)]
    FUNCTION         reduce using rule 105 (ops_7)
    FUNCTION         [reduce using rule 108 (ops_7)]
    RETURN           reduce using rule 105 (ops_7)
    RETURN           [reduce using rule 108 (ops_7)]
    BREAK            reduce using rule 105 (ops_7)
    BREAK            [reduce using rule 108 (ops_7)]
    NAME             reduce using rule 105 (ops_7)
    NAME             [reduce using rule 108 (ops_7)]
    COMMA            reduce using rule 105 (ops_7)
    COMMA            [reduce using rule 108 (ops_7)]
    SEMI             reduce using rule 105 (ops_7)
    SEMI             [reduce using rule 108 (ops_7)]
    PARA_L           reduce using rule 105 (ops_7)
    PARA_L           [reduce using rule 108 (ops_7)]
    PARA_R           reduce using rule 105 (ops_7)
    PARA_R           [reduce using rule 108 (ops_7)]
    BRACE_R          reduce using rule 105 (ops_7)
    BRACE_R          [reduce using rule 108 (ops_7)]
    BRACK_R          reduce using rule 105 (ops_7)
    BRACK_R          [reduce using rule 108 (ops_7)]
    $default         reduce using rule 105 (ops_7)


State 89

   66 funcbody: PARA_L . parlist PARA_R block END
   67         | PARA_L . PARA_R block END

    TDOT    shift, and go to state 139
    NAME    shift, and go to state 10
    PARA_R  shift, and go to state 140

    namelist  go to state 141
    name      go to state 58
    parlist   go to state 142


State 90

   65 function: FUNCTION funcbody .

    $default  reduce using rule 65 (function)


State 91

   72 tableconstructor: BRACE_L BRACE_R .

    $default  reduce using rule 72 (tableconstructor)


State 92

   76 field: BRACK_L . exp BRACK_R ASSIGN exp

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 143
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 93

   38 var: name .
   77 field: name . ASSIGN exp

    ASSIGN  shift, and go to state 144

    $default  reduce using rule 38 (var)


State 94

   78 field: exp .
  111 ops_9: exp .

    COMMA     reduce using rule 78 (field)
    COMMA     [reduce using rule 111 (ops_9)]
    SEMI      reduce using rule 78 (field)
    SEMI      [reduce using rule 111 (ops_9)]
    BRACE_R   reduce using rule 78 (field)
    BRACE_R   [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 95

   71 tableconstructor: BRACE_L fieldlistexp . BRACE_R

    BRACE_R  shift, and go to state 145


State 96

   73 fieldlistexp: fieldlist . optfieldsep
   75 fieldlist: fieldlist . fieldsep field

    COMMA  shift, and go to state 146
    SEMI   shift, and go to state 147

    $default  reduce using rule 82 (optfieldsep)

    fieldsep     go to state 148
    optfieldsep  go to state 149


State 97

   74 fieldlist: field .

    $default  reduce using rule 74 (fieldlist)


State 98

   15 stat: WHILE exp DO . block END

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 150
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 99

   85 ops_1: ops_1 OR . ops_2

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 151
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 100

   87 ops_2: ops_2 AND . ops_3

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 152
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 101

   94 ops_3: ops_3 EQUAL . ops_4

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 153
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 102

   89 ops_3: ops_3 LESS_THAN . ops_4

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 154
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 103

   90 ops_3: ops_3 MORE_THAN . ops_4

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 155
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 104

   91 ops_3: ops_3 LESS_EQUAL_THAN . ops_4

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 156
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 105

   92 ops_3: ops_3 MORE_EQUAL_THAN . ops_4

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 157
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 106

   93 ops_3: ops_3 TILDE_EQUAL . ops_4

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 158
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 107

   96 ops_4: ops_4 CONCAT . ops_5

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 159
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 108

   98 ops_5: ops_5 PLUS . ops_6

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 160
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 109

   99 ops_5: ops_5 MIN . ops_6

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 161
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 110

  101 ops_6: ops_6 MUL . ops_7

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 162
    ops_8             go to state 50
    ops_9             go to state 51


State 111

  102 ops_6: ops_6 DIV . ops_7

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 163
    ops_8             go to state 50
    ops_9             go to state 51


State 112

  103 ops_6: ops_6 MOD . ops_7

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 164
    ops_8             go to state 50
    ops_9             go to state 51


State 113

  109 ops_8: ops_8 POW . ops_9

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 85
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 165


State 114

   20 stat: FOR namelist IN . explist DO block END

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    explist           go to state 166
    exp               go to state 65
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 115

   42 namelist: namelist COMMA . name

    NAME  shift, and go to state 10

    name  go to state 167


State 116

   18 stat: FOR name ASSIGN . exp COMMA exp DO block END
   19     | FOR name ASSIGN . exp COMMA exp COMMA exp DO block END

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 168
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 117

   16 stat: REPEAT block UNTIL . exp

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 169
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 118

   25 ifexp: IF exp THEN . block

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 170
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 119

   22 stat: LOCAL FUNCTION name . funcbody

    PARA_L  shift, and go to state 89

    funcbody  go to state 171


State 120

   24 stat: LOCAL namelist ASSIGN . explist

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    explist           go to state 172
    exp               go to state 65
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 121

   21 stat: FUNCTION funcnamelist funcbody .

    $default  reduce using rule 21 (stat)


State 122

   35 funcname: funcname DOT . name

    NAME  shift, and go to state 10

    name  go to state 173


State 123

   33 funcnamelist: funcname COLON . name

    NAME  shift, and go to state 10

    name  go to state 174


State 124

   45 explist: explist COMMA . exp

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 175
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 125

    7 laststat: RETURN explist optsemi .

    $default  reduce using rule 7 (laststat)


State 126

   58 prefixexp: PARA_L exp PARA_R .

    $default  reduce using rule 58 (prefixexp)


State 127

    6 optchunk: chunk stat optsemi .

    $default  reduce using rule 6 (optchunk)


State 128

   29 elseif: ELSEIF exp . THEN block
  111 ops_9: exp .

    THEN  shift, and go to state 176

    THEN      [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 129

   30 optelse: ELSE . block

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 177
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 130

   27 optelseif: optelseif elseif .

    $default  reduce using rule 27 (optelseif)


State 131

   17 stat: ifexp optelseif optelse . END

    END  shift, and go to state 178


State 132

   12 stat: varlist ASSIGN explist .
   45 explist: explist . COMMA exp

    COMMA  shift, and go to state 124

    $default  reduce using rule 12 (stat)


State 133

   37 varlist: varlist COMMA var .
   56 prefixexp: var .

    ASSIGN    reduce using rule 37 (varlist)
    COMMA     reduce using rule 37 (varlist)
    $default  reduce using rule 56 (prefixexp)


State 134

   40 var: prefixexp DOT name .

    $default  reduce using rule 40 (var)


State 135

   60 functioncall: prefixexp COLON name . args

    STRING   shift, and go to state 32
    PARA_L   shift, and go to state 79
    BRACE_L  shift, and go to state 34

    args              go to state 179
    tableconstructor  go to state 82
    string            go to state 83


State 136

   61 args: PARA_L PARA_R .

    $default  reduce using rule 61 (args)


State 137

   45 explist: explist . COMMA exp
   62 args: PARA_L explist . PARA_R

    COMMA   shift, and go to state 124
    PARA_R  shift, and go to state 180


State 138

   39 var: prefixexp BRACK_L exp . BRACK_R
  111 ops_9: exp .

    BRACK_R  shift, and go to state 181

    BRACK_R   [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 139

   70 parlist: TDOT .

    $default  reduce using rule 70 (parlist)


State 140

   67 funcbody: PARA_L PARA_R . block END

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 182
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 141

   42 namelist: namelist . COMMA name
   68 parlist: namelist .
   69        | namelist . COMMA TDOT

    COMMA  shift, and go to state 183

    $default  reduce using rule 68 (parlist)


State 142

   66 funcbody: PARA_L parlist . PARA_R block END

    PARA_R  shift, and go to state 184


State 143

   76 field: BRACK_L exp . BRACK_R ASSIGN exp
  111 ops_9: exp .

    BRACK_R  shift, and go to state 185

    BRACK_R   [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 144

   77 field: name ASSIGN . exp

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 186
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 145

   71 tableconstructor: BRACE_L fieldlistexp BRACE_R .

    $default  reduce using rule 71 (tableconstructor)


State 146

   79 fieldsep: COMMA .

    $default  reduce using rule 79 (fieldsep)


State 147

   80 fieldsep: SEMI .

    $default  reduce using rule 80 (fieldsep)


State 148

   75 fieldlist: fieldlist fieldsep . field
   81 optfieldsep: fieldsep .

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34
    BRACK_L   shift, and go to state 92

    $default  reduce using rule 81 (optfieldsep)

    var               go to state 35
    name              go to state 93
    exp               go to state 94
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    field             go to state 187
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 149

   73 fieldlistexp: fieldlist optfieldsep .

    $default  reduce using rule 73 (fieldlistexp)


State 150

   15 stat: WHILE exp DO block . END

    END  shift, and go to state 188


State 151

   85 ops_1: ops_1 OR ops_2 .
   86      | ops_2 .
   87 ops_2: ops_2 . AND ops_3

    AND  shift, and go to state 100

    "end of file"    reduce using rule 85 (ops_1)
    "end of file"    [reduce using rule 86 (ops_1)]
    DO               reduce using rule 85 (ops_1)
    DO               [reduce using rule 86 (ops_1)]
    WHILE            reduce using rule 85 (ops_1)
    WHILE            [reduce using rule 86 (ops_1)]
    FOR              reduce using rule 85 (ops_1)
    FOR              [reduce using rule 86 (ops_1)]
    UNTIL            reduce using rule 85 (ops_1)
    UNTIL            [reduce using rule 86 (ops_1)]
    REPEAT           reduce using rule 85 (ops_1)
    REPEAT           [reduce using rule 86 (ops_1)]
    END              reduce using rule 85 (ops_1)
    END              [reduce using rule 86 (ops_1)]
    IF               reduce using rule 85 (ops_1)
    IF               [reduce using rule 86 (ops_1)]
    THEN             reduce using rule 85 (ops_1)
    THEN             [reduce using rule 86 (ops_1)]
    ELSEIF           reduce using rule 85 (ops_1)
    ELSEIF           [reduce using rule 86 (ops_1)]
    ELSE             reduce using rule 85 (ops_1)
    ELSE             [reduce using rule 86 (ops_1)]
    PLUS             reduce using rule 85 (ops_1)
    PLUS             [reduce using rule 86 (ops_1)]
    MIN              reduce using rule 85 (ops_1)
    MIN              [reduce using rule 86 (ops_1)]
    MUL              reduce using rule 85 (ops_1)
    MUL              [reduce using rule 86 (ops_1)]
    DIV              reduce using rule 85 (ops_1)
    DIV              [reduce using rule 86 (ops_1)]
    POW              reduce using rule 85 (ops_1)
    POW              [reduce using rule 86 (ops_1)]
    MOD              reduce using rule 85 (ops_1)
    MOD              [reduce using rule 86 (ops_1)]
    EQUAL            reduce using rule 85 (ops_1)
    EQUAL            [reduce using rule 86 (ops_1)]
    LESS_THAN        reduce using rule 85 (ops_1)
    LESS_THAN        [reduce using rule 86 (ops_1)]
    MORE_THAN        reduce using rule 85 (ops_1)
    MORE_THAN        [reduce using rule 86 (ops_1)]
    LESS_EQUAL_THAN  reduce using rule 85 (ops_1)
    LESS_EQUAL_THAN  [reduce using rule 86 (ops_1)]
    MORE_EQUAL_THAN  reduce using rule 85 (ops_1)
    MORE_EQUAL_THAN  [reduce using rule 86 (ops_1)]
    TILDE_EQUAL      reduce using rule 85 (ops_1)
    TILDE_EQUAL      [reduce using rule 86 (ops_1)]
    CONCAT           reduce using rule 85 (ops_1)
    CONCAT           [reduce using rule 86 (ops_1)]
    AND              [reduce using rule 85 (ops_1)]
    AND              [reduce using rule 86 (ops_1)]
    OR               reduce using rule 85 (ops_1)
    OR               [reduce using rule 86 (ops_1)]
    LOCAL            reduce using rule 85 (ops_1)
    LOCAL            [reduce using rule 86 (ops_1)]
    FUNCTION         reduce using rule 85 (ops_1)
    FUNCTION         [reduce using rule 86 (ops_1)]
    RETURN           reduce using rule 85 (ops_1)
    RETURN           [reduce using rule 86 (ops_1)]
    BREAK            reduce using rule 85 (ops_1)
    BREAK            [reduce using rule 86 (ops_1)]
    NAME             reduce using rule 85 (ops_1)
    NAME             [reduce using rule 86 (ops_1)]
    COMMA            reduce using rule 85 (ops_1)
    COMMA            [reduce using rule 86 (ops_1)]
    SEMI             reduce using rule 85 (ops_1)
    SEMI             [reduce using rule 86 (ops_1)]
    PARA_L           reduce using rule 85 (ops_1)
    PARA_L           [reduce using rule 86 (ops_1)]
    PARA_R           reduce using rule 85 (ops_1)
    PARA_R           [reduce using rule 86 (ops_1)]
    BRACE_R          reduce using rule 85 (ops_1)
    BRACE_R          [reduce using rule 86 (ops_1)]
    BRACK_R          reduce using rule 85 (ops_1)
    BRACK_R          [reduce using rule 86 (ops_1)]
    $default         reduce using rule 85 (ops_1)


State 152

   87 ops_2: ops_2 AND ops_3 .
   88      | ops_3 .
   89 ops_3: ops_3 . LESS_THAN ops_4
   90      | ops_3 . MORE_THAN ops_4
   91      | ops_3 . LESS_EQUAL_THAN ops_4
   92      | ops_3 . MORE_EQUAL_THAN ops_4
   93      | ops_3 . TILDE_EQUAL ops_4
   94      | ops_3 . EQUAL ops_4

    EQUAL            shift, and go to state 101
    LESS_THAN        shift, and go to state 102
    MORE_THAN        shift, and go to state 103
    LESS_EQUAL_THAN  shift, and go to state 104
    MORE_EQUAL_THAN  shift, and go to state 105
    TILDE_EQUAL      shift, and go to state 106

    "end of file"    reduce using rule 87 (ops_2)
    "end of file"    [reduce using rule 88 (ops_2)]
    DO               reduce using rule 87 (ops_2)
    DO               [reduce using rule 88 (ops_2)]
    WHILE            reduce using rule 87 (ops_2)
    WHILE            [reduce using rule 88 (ops_2)]
    FOR              reduce using rule 87 (ops_2)
    FOR              [reduce using rule 88 (ops_2)]
    UNTIL            reduce using rule 87 (ops_2)
    UNTIL            [reduce using rule 88 (ops_2)]
    REPEAT           reduce using rule 87 (ops_2)
    REPEAT           [reduce using rule 88 (ops_2)]
    END              reduce using rule 87 (ops_2)
    END              [reduce using rule 88 (ops_2)]
    IF               reduce using rule 87 (ops_2)
    IF               [reduce using rule 88 (ops_2)]
    THEN             reduce using rule 87 (ops_2)
    THEN             [reduce using rule 88 (ops_2)]
    ELSEIF           reduce using rule 87 (ops_2)
    ELSEIF           [reduce using rule 88 (ops_2)]
    ELSE             reduce using rule 87 (ops_2)
    ELSE             [reduce using rule 88 (ops_2)]
    PLUS             reduce using rule 87 (ops_2)
    PLUS             [reduce using rule 88 (ops_2)]
    MIN              reduce using rule 87 (ops_2)
    MIN              [reduce using rule 88 (ops_2)]
    MUL              reduce using rule 87 (ops_2)
    MUL              [reduce using rule 88 (ops_2)]
    DIV              reduce using rule 87 (ops_2)
    DIV              [reduce using rule 88 (ops_2)]
    POW              reduce using rule 87 (ops_2)
    POW              [reduce using rule 88 (ops_2)]
    MOD              reduce using rule 87 (ops_2)
    MOD              [reduce using rule 88 (ops_2)]
    EQUAL            [reduce using rule 87 (ops_2)]
    EQUAL            [reduce using rule 88 (ops_2)]
    LESS_THAN        [reduce using rule 87 (ops_2)]
    LESS_THAN        [reduce using rule 88 (ops_2)]
    MORE_THAN        [reduce using rule 87 (ops_2)]
    MORE_THAN        [reduce using rule 88 (ops_2)]
    LESS_EQUAL_THAN  [reduce using rule 87 (ops_2)]
    LESS_EQUAL_THAN  [reduce using rule 88 (ops_2)]
    MORE_EQUAL_THAN  [reduce using rule 87 (ops_2)]
    MORE_EQUAL_THAN  [reduce using rule 88 (ops_2)]
    TILDE_EQUAL      [reduce using rule 87 (ops_2)]
    TILDE_EQUAL      [reduce using rule 88 (ops_2)]
    CONCAT           reduce using rule 87 (ops_2)
    CONCAT           [reduce using rule 88 (ops_2)]
    AND              reduce using rule 87 (ops_2)
    AND              [reduce using rule 88 (ops_2)]
    OR               reduce using rule 87 (ops_2)
    OR               [reduce using rule 88 (ops_2)]
    LOCAL            reduce using rule 87 (ops_2)
    LOCAL            [reduce using rule 88 (ops_2)]
    FUNCTION         reduce using rule 87 (ops_2)
    FUNCTION         [reduce using rule 88 (ops_2)]
    RETURN           reduce using rule 87 (ops_2)
    RETURN           [reduce using rule 88 (ops_2)]
    BREAK            reduce using rule 87 (ops_2)
    BREAK            [reduce using rule 88 (ops_2)]
    NAME             reduce using rule 87 (ops_2)
    NAME             [reduce using rule 88 (ops_2)]
    COMMA            reduce using rule 87 (ops_2)
    COMMA            [reduce using rule 88 (ops_2)]
    SEMI             reduce using rule 87 (ops_2)
    SEMI             [reduce using rule 88 (ops_2)]
    PARA_L           reduce using rule 87 (ops_2)
    PARA_L           [reduce using rule 88 (ops_2)]
    PARA_R           reduce using rule 87 (ops_2)
    PARA_R           [reduce using rule 88 (ops_2)]
    BRACE_R          reduce using rule 87 (ops_2)
    BRACE_R          [reduce using rule 88 (ops_2)]
    BRACK_R          reduce using rule 87 (ops_2)
    BRACK_R          [reduce using rule 88 (ops_2)]
    $default         reduce using rule 87 (ops_2)


State 153

   94 ops_3: ops_3 EQUAL ops_4 .
   95      | ops_4 .
   96 ops_4: ops_4 . CONCAT ops_5

    CONCAT  shift, and go to state 107

    "end of file"    reduce using rule 94 (ops_3)
    "end of file"    [reduce using rule 95 (ops_3)]
    DO               reduce using rule 94 (ops_3)
    DO               [reduce using rule 95 (ops_3)]
    WHILE            reduce using rule 94 (ops_3)
    WHILE            [reduce using rule 95 (ops_3)]
    FOR              reduce using rule 94 (ops_3)
    FOR              [reduce using rule 95 (ops_3)]
    UNTIL            reduce using rule 94 (ops_3)
    UNTIL            [reduce using rule 95 (ops_3)]
    REPEAT           reduce using rule 94 (ops_3)
    REPEAT           [reduce using rule 95 (ops_3)]
    END              reduce using rule 94 (ops_3)
    END              [reduce using rule 95 (ops_3)]
    IF               reduce using rule 94 (ops_3)
    IF               [reduce using rule 95 (ops_3)]
    THEN             reduce using rule 94 (ops_3)
    THEN             [reduce using rule 95 (ops_3)]
    ELSEIF           reduce using rule 94 (ops_3)
    ELSEIF           [reduce using rule 95 (ops_3)]
    ELSE             reduce using rule 94 (ops_3)
    ELSE             [reduce using rule 95 (ops_3)]
    PLUS             reduce using rule 94 (ops_3)
    PLUS             [reduce using rule 95 (ops_3)]
    MIN              reduce using rule 94 (ops_3)
    MIN              [reduce using rule 95 (ops_3)]
    MUL              reduce using rule 94 (ops_3)
    MUL              [reduce using rule 95 (ops_3)]
    DIV              reduce using rule 94 (ops_3)
    DIV              [reduce using rule 95 (ops_3)]
    POW              reduce using rule 94 (ops_3)
    POW              [reduce using rule 95 (ops_3)]
    MOD              reduce using rule 94 (ops_3)
    MOD              [reduce using rule 95 (ops_3)]
    EQUAL            reduce using rule 94 (ops_3)
    EQUAL            [reduce using rule 95 (ops_3)]
    LESS_THAN        reduce using rule 94 (ops_3)
    LESS_THAN        [reduce using rule 95 (ops_3)]
    MORE_THAN        reduce using rule 94 (ops_3)
    MORE_THAN        [reduce using rule 95 (ops_3)]
    LESS_EQUAL_THAN  reduce using rule 94 (ops_3)
    LESS_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    MORE_EQUAL_THAN  reduce using rule 94 (ops_3)
    MORE_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    TILDE_EQUAL      reduce using rule 94 (ops_3)
    TILDE_EQUAL      [reduce using rule 95 (ops_3)]
    CONCAT           [reduce using rule 94 (ops_3)]
    CONCAT           [reduce using rule 95 (ops_3)]
    AND              reduce using rule 94 (ops_3)
    AND              [reduce using rule 95 (ops_3)]
    OR               reduce using rule 94 (ops_3)
    OR               [reduce using rule 95 (ops_3)]
    LOCAL            reduce using rule 94 (ops_3)
    LOCAL            [reduce using rule 95 (ops_3)]
    FUNCTION         reduce using rule 94 (ops_3)
    FUNCTION         [reduce using rule 95 (ops_3)]
    RETURN           reduce using rule 94 (ops_3)
    RETURN           [reduce using rule 95 (ops_3)]
    BREAK            reduce using rule 94 (ops_3)
    BREAK            [reduce using rule 95 (ops_3)]
    NAME             reduce using rule 94 (ops_3)
    NAME             [reduce using rule 95 (ops_3)]
    COMMA            reduce using rule 94 (ops_3)
    COMMA            [reduce using rule 95 (ops_3)]
    SEMI             reduce using rule 94 (ops_3)
    SEMI             [reduce using rule 95 (ops_3)]
    PARA_L           reduce using rule 94 (ops_3)
    PARA_L           [reduce using rule 95 (ops_3)]
    PARA_R           reduce using rule 94 (ops_3)
    PARA_R           [reduce using rule 95 (ops_3)]
    BRACE_R          reduce using rule 94 (ops_3)
    BRACE_R          [reduce using rule 95 (ops_3)]
    BRACK_R          reduce using rule 94 (ops_3)
    BRACK_R          [reduce using rule 95 (ops_3)]
    $default         reduce using rule 94 (ops_3)


State 154

   89 ops_3: ops_3 LESS_THAN ops_4 .
   95      | ops_4 .
   96 ops_4: ops_4 . CONCAT ops_5

    CONCAT  shift, and go to state 107

    "end of file"    reduce using rule 89 (ops_3)
    "end of file"    [reduce using rule 95 (ops_3)]
    DO               reduce using rule 89 (ops_3)
    DO               [reduce using rule 95 (ops_3)]
    WHILE            reduce using rule 89 (ops_3)
    WHILE            [reduce using rule 95 (ops_3)]
    FOR              reduce using rule 89 (ops_3)
    FOR              [reduce using rule 95 (ops_3)]
    UNTIL            reduce using rule 89 (ops_3)
    UNTIL            [reduce using rule 95 (ops_3)]
    REPEAT           reduce using rule 89 (ops_3)
    REPEAT           [reduce using rule 95 (ops_3)]
    END              reduce using rule 89 (ops_3)
    END              [reduce using rule 95 (ops_3)]
    IF               reduce using rule 89 (ops_3)
    IF               [reduce using rule 95 (ops_3)]
    THEN             reduce using rule 89 (ops_3)
    THEN             [reduce using rule 95 (ops_3)]
    ELSEIF           reduce using rule 89 (ops_3)
    ELSEIF           [reduce using rule 95 (ops_3)]
    ELSE             reduce using rule 89 (ops_3)
    ELSE             [reduce using rule 95 (ops_3)]
    PLUS             reduce using rule 89 (ops_3)
    PLUS             [reduce using rule 95 (ops_3)]
    MIN              reduce using rule 89 (ops_3)
    MIN              [reduce using rule 95 (ops_3)]
    MUL              reduce using rule 89 (ops_3)
    MUL              [reduce using rule 95 (ops_3)]
    DIV              reduce using rule 89 (ops_3)
    DIV              [reduce using rule 95 (ops_3)]
    POW              reduce using rule 89 (ops_3)
    POW              [reduce using rule 95 (ops_3)]
    MOD              reduce using rule 89 (ops_3)
    MOD              [reduce using rule 95 (ops_3)]
    EQUAL            reduce using rule 89 (ops_3)
    EQUAL            [reduce using rule 95 (ops_3)]
    LESS_THAN        reduce using rule 89 (ops_3)
    LESS_THAN        [reduce using rule 95 (ops_3)]
    MORE_THAN        reduce using rule 89 (ops_3)
    MORE_THAN        [reduce using rule 95 (ops_3)]
    LESS_EQUAL_THAN  reduce using rule 89 (ops_3)
    LESS_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    MORE_EQUAL_THAN  reduce using rule 89 (ops_3)
    MORE_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    TILDE_EQUAL      reduce using rule 89 (ops_3)
    TILDE_EQUAL      [reduce using rule 95 (ops_3)]
    CONCAT           [reduce using rule 89 (ops_3)]
    CONCAT           [reduce using rule 95 (ops_3)]
    AND              reduce using rule 89 (ops_3)
    AND              [reduce using rule 95 (ops_3)]
    OR               reduce using rule 89 (ops_3)
    OR               [reduce using rule 95 (ops_3)]
    LOCAL            reduce using rule 89 (ops_3)
    LOCAL            [reduce using rule 95 (ops_3)]
    FUNCTION         reduce using rule 89 (ops_3)
    FUNCTION         [reduce using rule 95 (ops_3)]
    RETURN           reduce using rule 89 (ops_3)
    RETURN           [reduce using rule 95 (ops_3)]
    BREAK            reduce using rule 89 (ops_3)
    BREAK            [reduce using rule 95 (ops_3)]
    NAME             reduce using rule 89 (ops_3)
    NAME             [reduce using rule 95 (ops_3)]
    COMMA            reduce using rule 89 (ops_3)
    COMMA            [reduce using rule 95 (ops_3)]
    SEMI             reduce using rule 89 (ops_3)
    SEMI             [reduce using rule 95 (ops_3)]
    PARA_L           reduce using rule 89 (ops_3)
    PARA_L           [reduce using rule 95 (ops_3)]
    PARA_R           reduce using rule 89 (ops_3)
    PARA_R           [reduce using rule 95 (ops_3)]
    BRACE_R          reduce using rule 89 (ops_3)
    BRACE_R          [reduce using rule 95 (ops_3)]
    BRACK_R          reduce using rule 89 (ops_3)
    BRACK_R          [reduce using rule 95 (ops_3)]
    $default         reduce using rule 89 (ops_3)


State 155

   90 ops_3: ops_3 MORE_THAN ops_4 .
   95      | ops_4 .
   96 ops_4: ops_4 . CONCAT ops_5

    CONCAT  shift, and go to state 107

    "end of file"    reduce using rule 90 (ops_3)
    "end of file"    [reduce using rule 95 (ops_3)]
    DO               reduce using rule 90 (ops_3)
    DO               [reduce using rule 95 (ops_3)]
    WHILE            reduce using rule 90 (ops_3)
    WHILE            [reduce using rule 95 (ops_3)]
    FOR              reduce using rule 90 (ops_3)
    FOR              [reduce using rule 95 (ops_3)]
    UNTIL            reduce using rule 90 (ops_3)
    UNTIL            [reduce using rule 95 (ops_3)]
    REPEAT           reduce using rule 90 (ops_3)
    REPEAT           [reduce using rule 95 (ops_3)]
    END              reduce using rule 90 (ops_3)
    END              [reduce using rule 95 (ops_3)]
    IF               reduce using rule 90 (ops_3)
    IF               [reduce using rule 95 (ops_3)]
    THEN             reduce using rule 90 (ops_3)
    THEN             [reduce using rule 95 (ops_3)]
    ELSEIF           reduce using rule 90 (ops_3)
    ELSEIF           [reduce using rule 95 (ops_3)]
    ELSE             reduce using rule 90 (ops_3)
    ELSE             [reduce using rule 95 (ops_3)]
    PLUS             reduce using rule 90 (ops_3)
    PLUS             [reduce using rule 95 (ops_3)]
    MIN              reduce using rule 90 (ops_3)
    MIN              [reduce using rule 95 (ops_3)]
    MUL              reduce using rule 90 (ops_3)
    MUL              [reduce using rule 95 (ops_3)]
    DIV              reduce using rule 90 (ops_3)
    DIV              [reduce using rule 95 (ops_3)]
    POW              reduce using rule 90 (ops_3)
    POW              [reduce using rule 95 (ops_3)]
    MOD              reduce using rule 90 (ops_3)
    MOD              [reduce using rule 95 (ops_3)]
    EQUAL            reduce using rule 90 (ops_3)
    EQUAL            [reduce using rule 95 (ops_3)]
    LESS_THAN        reduce using rule 90 (ops_3)
    LESS_THAN        [reduce using rule 95 (ops_3)]
    MORE_THAN        reduce using rule 90 (ops_3)
    MORE_THAN        [reduce using rule 95 (ops_3)]
    LESS_EQUAL_THAN  reduce using rule 90 (ops_3)
    LESS_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    MORE_EQUAL_THAN  reduce using rule 90 (ops_3)
    MORE_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    TILDE_EQUAL      reduce using rule 90 (ops_3)
    TILDE_EQUAL      [reduce using rule 95 (ops_3)]
    CONCAT           [reduce using rule 90 (ops_3)]
    CONCAT           [reduce using rule 95 (ops_3)]
    AND              reduce using rule 90 (ops_3)
    AND              [reduce using rule 95 (ops_3)]
    OR               reduce using rule 90 (ops_3)
    OR               [reduce using rule 95 (ops_3)]
    LOCAL            reduce using rule 90 (ops_3)
    LOCAL            [reduce using rule 95 (ops_3)]
    FUNCTION         reduce using rule 90 (ops_3)
    FUNCTION         [reduce using rule 95 (ops_3)]
    RETURN           reduce using rule 90 (ops_3)
    RETURN           [reduce using rule 95 (ops_3)]
    BREAK            reduce using rule 90 (ops_3)
    BREAK            [reduce using rule 95 (ops_3)]
    NAME             reduce using rule 90 (ops_3)
    NAME             [reduce using rule 95 (ops_3)]
    COMMA            reduce using rule 90 (ops_3)
    COMMA            [reduce using rule 95 (ops_3)]
    SEMI             reduce using rule 90 (ops_3)
    SEMI             [reduce using rule 95 (ops_3)]
    PARA_L           reduce using rule 90 (ops_3)
    PARA_L           [reduce using rule 95 (ops_3)]
    PARA_R           reduce using rule 90 (ops_3)
    PARA_R           [reduce using rule 95 (ops_3)]
    BRACE_R          reduce using rule 90 (ops_3)
    BRACE_R          [reduce using rule 95 (ops_3)]
    BRACK_R          reduce using rule 90 (ops_3)
    BRACK_R          [reduce using rule 95 (ops_3)]
    $default         reduce using rule 90 (ops_3)


State 156

   91 ops_3: ops_3 LESS_EQUAL_THAN ops_4 .
   95      | ops_4 .
   96 ops_4: ops_4 . CONCAT ops_5

    CONCAT  shift, and go to state 107

    "end of file"    reduce using rule 91 (ops_3)
    "end of file"    [reduce using rule 95 (ops_3)]
    DO               reduce using rule 91 (ops_3)
    DO               [reduce using rule 95 (ops_3)]
    WHILE            reduce using rule 91 (ops_3)
    WHILE            [reduce using rule 95 (ops_3)]
    FOR              reduce using rule 91 (ops_3)
    FOR              [reduce using rule 95 (ops_3)]
    UNTIL            reduce using rule 91 (ops_3)
    UNTIL            [reduce using rule 95 (ops_3)]
    REPEAT           reduce using rule 91 (ops_3)
    REPEAT           [reduce using rule 95 (ops_3)]
    END              reduce using rule 91 (ops_3)
    END              [reduce using rule 95 (ops_3)]
    IF               reduce using rule 91 (ops_3)
    IF               [reduce using rule 95 (ops_3)]
    THEN             reduce using rule 91 (ops_3)
    THEN             [reduce using rule 95 (ops_3)]
    ELSEIF           reduce using rule 91 (ops_3)
    ELSEIF           [reduce using rule 95 (ops_3)]
    ELSE             reduce using rule 91 (ops_3)
    ELSE             [reduce using rule 95 (ops_3)]
    PLUS             reduce using rule 91 (ops_3)
    PLUS             [reduce using rule 95 (ops_3)]
    MIN              reduce using rule 91 (ops_3)
    MIN              [reduce using rule 95 (ops_3)]
    MUL              reduce using rule 91 (ops_3)
    MUL              [reduce using rule 95 (ops_3)]
    DIV              reduce using rule 91 (ops_3)
    DIV              [reduce using rule 95 (ops_3)]
    POW              reduce using rule 91 (ops_3)
    POW              [reduce using rule 95 (ops_3)]
    MOD              reduce using rule 91 (ops_3)
    MOD              [reduce using rule 95 (ops_3)]
    EQUAL            reduce using rule 91 (ops_3)
    EQUAL            [reduce using rule 95 (ops_3)]
    LESS_THAN        reduce using rule 91 (ops_3)
    LESS_THAN        [reduce using rule 95 (ops_3)]
    MORE_THAN        reduce using rule 91 (ops_3)
    MORE_THAN        [reduce using rule 95 (ops_3)]
    LESS_EQUAL_THAN  reduce using rule 91 (ops_3)
    LESS_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    MORE_EQUAL_THAN  reduce using rule 91 (ops_3)
    MORE_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    TILDE_EQUAL      reduce using rule 91 (ops_3)
    TILDE_EQUAL      [reduce using rule 95 (ops_3)]
    CONCAT           [reduce using rule 91 (ops_3)]
    CONCAT           [reduce using rule 95 (ops_3)]
    AND              reduce using rule 91 (ops_3)
    AND              [reduce using rule 95 (ops_3)]
    OR               reduce using rule 91 (ops_3)
    OR               [reduce using rule 95 (ops_3)]
    LOCAL            reduce using rule 91 (ops_3)
    LOCAL            [reduce using rule 95 (ops_3)]
    FUNCTION         reduce using rule 91 (ops_3)
    FUNCTION         [reduce using rule 95 (ops_3)]
    RETURN           reduce using rule 91 (ops_3)
    RETURN           [reduce using rule 95 (ops_3)]
    BREAK            reduce using rule 91 (ops_3)
    BREAK            [reduce using rule 95 (ops_3)]
    NAME             reduce using rule 91 (ops_3)
    NAME             [reduce using rule 95 (ops_3)]
    COMMA            reduce using rule 91 (ops_3)
    COMMA            [reduce using rule 95 (ops_3)]
    SEMI             reduce using rule 91 (ops_3)
    SEMI             [reduce using rule 95 (ops_3)]
    PARA_L           reduce using rule 91 (ops_3)
    PARA_L           [reduce using rule 95 (ops_3)]
    PARA_R           reduce using rule 91 (ops_3)
    PARA_R           [reduce using rule 95 (ops_3)]
    BRACE_R          reduce using rule 91 (ops_3)
    BRACE_R          [reduce using rule 95 (ops_3)]
    BRACK_R          reduce using rule 91 (ops_3)
    BRACK_R          [reduce using rule 95 (ops_3)]
    $default         reduce using rule 91 (ops_3)


State 157

   92 ops_3: ops_3 MORE_EQUAL_THAN ops_4 .
   95      | ops_4 .
   96 ops_4: ops_4 . CONCAT ops_5

    CONCAT  shift, and go to state 107

    "end of file"    reduce using rule 92 (ops_3)
    "end of file"    [reduce using rule 95 (ops_3)]
    DO               reduce using rule 92 (ops_3)
    DO               [reduce using rule 95 (ops_3)]
    WHILE            reduce using rule 92 (ops_3)
    WHILE            [reduce using rule 95 (ops_3)]
    FOR              reduce using rule 92 (ops_3)
    FOR              [reduce using rule 95 (ops_3)]
    UNTIL            reduce using rule 92 (ops_3)
    UNTIL            [reduce using rule 95 (ops_3)]
    REPEAT           reduce using rule 92 (ops_3)
    REPEAT           [reduce using rule 95 (ops_3)]
    END              reduce using rule 92 (ops_3)
    END              [reduce using rule 95 (ops_3)]
    IF               reduce using rule 92 (ops_3)
    IF               [reduce using rule 95 (ops_3)]
    THEN             reduce using rule 92 (ops_3)
    THEN             [reduce using rule 95 (ops_3)]
    ELSEIF           reduce using rule 92 (ops_3)
    ELSEIF           [reduce using rule 95 (ops_3)]
    ELSE             reduce using rule 92 (ops_3)
    ELSE             [reduce using rule 95 (ops_3)]
    PLUS             reduce using rule 92 (ops_3)
    PLUS             [reduce using rule 95 (ops_3)]
    MIN              reduce using rule 92 (ops_3)
    MIN              [reduce using rule 95 (ops_3)]
    MUL              reduce using rule 92 (ops_3)
    MUL              [reduce using rule 95 (ops_3)]
    DIV              reduce using rule 92 (ops_3)
    DIV              [reduce using rule 95 (ops_3)]
    POW              reduce using rule 92 (ops_3)
    POW              [reduce using rule 95 (ops_3)]
    MOD              reduce using rule 92 (ops_3)
    MOD              [reduce using rule 95 (ops_3)]
    EQUAL            reduce using rule 92 (ops_3)
    EQUAL            [reduce using rule 95 (ops_3)]
    LESS_THAN        reduce using rule 92 (ops_3)
    LESS_THAN        [reduce using rule 95 (ops_3)]
    MORE_THAN        reduce using rule 92 (ops_3)
    MORE_THAN        [reduce using rule 95 (ops_3)]
    LESS_EQUAL_THAN  reduce using rule 92 (ops_3)
    LESS_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    MORE_EQUAL_THAN  reduce using rule 92 (ops_3)
    MORE_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    TILDE_EQUAL      reduce using rule 92 (ops_3)
    TILDE_EQUAL      [reduce using rule 95 (ops_3)]
    CONCAT           [reduce using rule 92 (ops_3)]
    CONCAT           [reduce using rule 95 (ops_3)]
    AND              reduce using rule 92 (ops_3)
    AND              [reduce using rule 95 (ops_3)]
    OR               reduce using rule 92 (ops_3)
    OR               [reduce using rule 95 (ops_3)]
    LOCAL            reduce using rule 92 (ops_3)
    LOCAL            [reduce using rule 95 (ops_3)]
    FUNCTION         reduce using rule 92 (ops_3)
    FUNCTION         [reduce using rule 95 (ops_3)]
    RETURN           reduce using rule 92 (ops_3)
    RETURN           [reduce using rule 95 (ops_3)]
    BREAK            reduce using rule 92 (ops_3)
    BREAK            [reduce using rule 95 (ops_3)]
    NAME             reduce using rule 92 (ops_3)
    NAME             [reduce using rule 95 (ops_3)]
    COMMA            reduce using rule 92 (ops_3)
    COMMA            [reduce using rule 95 (ops_3)]
    SEMI             reduce using rule 92 (ops_3)
    SEMI             [reduce using rule 95 (ops_3)]
    PARA_L           reduce using rule 92 (ops_3)
    PARA_L           [reduce using rule 95 (ops_3)]
    PARA_R           reduce using rule 92 (ops_3)
    PARA_R           [reduce using rule 95 (ops_3)]
    BRACE_R          reduce using rule 92 (ops_3)
    BRACE_R          [reduce using rule 95 (ops_3)]
    BRACK_R          reduce using rule 92 (ops_3)
    BRACK_R          [reduce using rule 95 (ops_3)]
    $default         reduce using rule 92 (ops_3)


State 158

   93 ops_3: ops_3 TILDE_EQUAL ops_4 .
   95      | ops_4 .
   96 ops_4: ops_4 . CONCAT ops_5

    CONCAT  shift, and go to state 107

    "end of file"    reduce using rule 93 (ops_3)
    "end of file"    [reduce using rule 95 (ops_3)]
    DO               reduce using rule 93 (ops_3)
    DO               [reduce using rule 95 (ops_3)]
    WHILE            reduce using rule 93 (ops_3)
    WHILE            [reduce using rule 95 (ops_3)]
    FOR              reduce using rule 93 (ops_3)
    FOR              [reduce using rule 95 (ops_3)]
    UNTIL            reduce using rule 93 (ops_3)
    UNTIL            [reduce using rule 95 (ops_3)]
    REPEAT           reduce using rule 93 (ops_3)
    REPEAT           [reduce using rule 95 (ops_3)]
    END              reduce using rule 93 (ops_3)
    END              [reduce using rule 95 (ops_3)]
    IF               reduce using rule 93 (ops_3)
    IF               [reduce using rule 95 (ops_3)]
    THEN             reduce using rule 93 (ops_3)
    THEN             [reduce using rule 95 (ops_3)]
    ELSEIF           reduce using rule 93 (ops_3)
    ELSEIF           [reduce using rule 95 (ops_3)]
    ELSE             reduce using rule 93 (ops_3)
    ELSE             [reduce using rule 95 (ops_3)]
    PLUS             reduce using rule 93 (ops_3)
    PLUS             [reduce using rule 95 (ops_3)]
    MIN              reduce using rule 93 (ops_3)
    MIN              [reduce using rule 95 (ops_3)]
    MUL              reduce using rule 93 (ops_3)
    MUL              [reduce using rule 95 (ops_3)]
    DIV              reduce using rule 93 (ops_3)
    DIV              [reduce using rule 95 (ops_3)]
    POW              reduce using rule 93 (ops_3)
    POW              [reduce using rule 95 (ops_3)]
    MOD              reduce using rule 93 (ops_3)
    MOD              [reduce using rule 95 (ops_3)]
    EQUAL            reduce using rule 93 (ops_3)
    EQUAL            [reduce using rule 95 (ops_3)]
    LESS_THAN        reduce using rule 93 (ops_3)
    LESS_THAN        [reduce using rule 95 (ops_3)]
    MORE_THAN        reduce using rule 93 (ops_3)
    MORE_THAN        [reduce using rule 95 (ops_3)]
    LESS_EQUAL_THAN  reduce using rule 93 (ops_3)
    LESS_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    MORE_EQUAL_THAN  reduce using rule 93 (ops_3)
    MORE_EQUAL_THAN  [reduce using rule 95 (ops_3)]
    TILDE_EQUAL      reduce using rule 93 (ops_3)
    TILDE_EQUAL      [reduce using rule 95 (ops_3)]
    CONCAT           [reduce using rule 93 (ops_3)]
    CONCAT           [reduce using rule 95 (ops_3)]
    AND              reduce using rule 93 (ops_3)
    AND              [reduce using rule 95 (ops_3)]
    OR               reduce using rule 93 (ops_3)
    OR               [reduce using rule 95 (ops_3)]
    LOCAL            reduce using rule 93 (ops_3)
    LOCAL            [reduce using rule 95 (ops_3)]
    FUNCTION         reduce using rule 93 (ops_3)
    FUNCTION         [reduce using rule 95 (ops_3)]
    RETURN           reduce using rule 93 (ops_3)
    RETURN           [reduce using rule 95 (ops_3)]
    BREAK            reduce using rule 93 (ops_3)
    BREAK            [reduce using rule 95 (ops_3)]
    NAME             reduce using rule 93 (ops_3)
    NAME             [reduce using rule 95 (ops_3)]
    COMMA            reduce using rule 93 (ops_3)
    COMMA            [reduce using rule 95 (ops_3)]
    SEMI             reduce using rule 93 (ops_3)
    SEMI             [reduce using rule 95 (ops_3)]
    PARA_L           reduce using rule 93 (ops_3)
    PARA_L           [reduce using rule 95 (ops_3)]
    PARA_R           reduce using rule 93 (ops_3)
    PARA_R           [reduce using rule 95 (ops_3)]
    BRACE_R          reduce using rule 93 (ops_3)
    BRACE_R          [reduce using rule 95 (ops_3)]
    BRACK_R          reduce using rule 93 (ops_3)
    BRACK_R          [reduce using rule 95 (ops_3)]
    $default         reduce using rule 93 (ops_3)


State 159

   96 ops_4: ops_4 CONCAT ops_5 .
   97      | ops_5 .
   98 ops_5: ops_5 . PLUS ops_6
   99      | ops_5 . MIN ops_6

    PLUS  shift, and go to state 108
    MIN   shift, and go to state 109

    "end of file"    reduce using rule 96 (ops_4)
    "end of file"    [reduce using rule 97 (ops_4)]
    DO               reduce using rule 96 (ops_4)
    DO               [reduce using rule 97 (ops_4)]
    WHILE            reduce using rule 96 (ops_4)
    WHILE            [reduce using rule 97 (ops_4)]
    FOR              reduce using rule 96 (ops_4)
    FOR              [reduce using rule 97 (ops_4)]
    UNTIL            reduce using rule 96 (ops_4)
    UNTIL            [reduce using rule 97 (ops_4)]
    REPEAT           reduce using rule 96 (ops_4)
    REPEAT           [reduce using rule 97 (ops_4)]
    END              reduce using rule 96 (ops_4)
    END              [reduce using rule 97 (ops_4)]
    IF               reduce using rule 96 (ops_4)
    IF               [reduce using rule 97 (ops_4)]
    THEN             reduce using rule 96 (ops_4)
    THEN             [reduce using rule 97 (ops_4)]
    ELSEIF           reduce using rule 96 (ops_4)
    ELSEIF           [reduce using rule 97 (ops_4)]
    ELSE             reduce using rule 96 (ops_4)
    ELSE             [reduce using rule 97 (ops_4)]
    PLUS             [reduce using rule 96 (ops_4)]
    PLUS             [reduce using rule 97 (ops_4)]
    MIN              [reduce using rule 96 (ops_4)]
    MIN              [reduce using rule 97 (ops_4)]
    MUL              reduce using rule 96 (ops_4)
    MUL              [reduce using rule 97 (ops_4)]
    DIV              reduce using rule 96 (ops_4)
    DIV              [reduce using rule 97 (ops_4)]
    POW              reduce using rule 96 (ops_4)
    POW              [reduce using rule 97 (ops_4)]
    MOD              reduce using rule 96 (ops_4)
    MOD              [reduce using rule 97 (ops_4)]
    EQUAL            reduce using rule 96 (ops_4)
    EQUAL            [reduce using rule 97 (ops_4)]
    LESS_THAN        reduce using rule 96 (ops_4)
    LESS_THAN        [reduce using rule 97 (ops_4)]
    MORE_THAN        reduce using rule 96 (ops_4)
    MORE_THAN        [reduce using rule 97 (ops_4)]
    LESS_EQUAL_THAN  reduce using rule 96 (ops_4)
    LESS_EQUAL_THAN  [reduce using rule 97 (ops_4)]
    MORE_EQUAL_THAN  reduce using rule 96 (ops_4)
    MORE_EQUAL_THAN  [reduce using rule 97 (ops_4)]
    TILDE_EQUAL      reduce using rule 96 (ops_4)
    TILDE_EQUAL      [reduce using rule 97 (ops_4)]
    CONCAT           reduce using rule 96 (ops_4)
    CONCAT           [reduce using rule 97 (ops_4)]
    AND              reduce using rule 96 (ops_4)
    AND              [reduce using rule 97 (ops_4)]
    OR               reduce using rule 96 (ops_4)
    OR               [reduce using rule 97 (ops_4)]
    LOCAL            reduce using rule 96 (ops_4)
    LOCAL            [reduce using rule 97 (ops_4)]
    FUNCTION         reduce using rule 96 (ops_4)
    FUNCTION         [reduce using rule 97 (ops_4)]
    RETURN           reduce using rule 96 (ops_4)
    RETURN           [reduce using rule 97 (ops_4)]
    BREAK            reduce using rule 96 (ops_4)
    BREAK            [reduce using rule 97 (ops_4)]
    NAME             reduce using rule 96 (ops_4)
    NAME             [reduce using rule 97 (ops_4)]
    COMMA            reduce using rule 96 (ops_4)
    COMMA            [reduce using rule 97 (ops_4)]
    SEMI             reduce using rule 96 (ops_4)
    SEMI             [reduce using rule 97 (ops_4)]
    PARA_L           reduce using rule 96 (ops_4)
    PARA_L           [reduce using rule 97 (ops_4)]
    PARA_R           reduce using rule 96 (ops_4)
    PARA_R           [reduce using rule 97 (ops_4)]
    BRACE_R          reduce using rule 96 (ops_4)
    BRACE_R          [reduce using rule 97 (ops_4)]
    BRACK_R          reduce using rule 96 (ops_4)
    BRACK_R          [reduce using rule 97 (ops_4)]
    $default         reduce using rule 96 (ops_4)


State 160

   98 ops_5: ops_5 PLUS ops_6 .
  100      | ops_6 .
  101 ops_6: ops_6 . MUL ops_7
  102      | ops_6 . DIV ops_7
  103      | ops_6 . MOD ops_7

    MUL  shift, and go to state 110
    DIV  shift, and go to state 111
    MOD  shift, and go to state 112

    "end of file"    reduce using rule 98 (ops_5)
    "end of file"    [reduce using rule 100 (ops_5)]
    DO               reduce using rule 98 (ops_5)
    DO               [reduce using rule 100 (ops_5)]
    WHILE            reduce using rule 98 (ops_5)
    WHILE            [reduce using rule 100 (ops_5)]
    FOR              reduce using rule 98 (ops_5)
    FOR              [reduce using rule 100 (ops_5)]
    UNTIL            reduce using rule 98 (ops_5)
    UNTIL            [reduce using rule 100 (ops_5)]
    REPEAT           reduce using rule 98 (ops_5)
    REPEAT           [reduce using rule 100 (ops_5)]
    END              reduce using rule 98 (ops_5)
    END              [reduce using rule 100 (ops_5)]
    IF               reduce using rule 98 (ops_5)
    IF               [reduce using rule 100 (ops_5)]
    THEN             reduce using rule 98 (ops_5)
    THEN             [reduce using rule 100 (ops_5)]
    ELSEIF           reduce using rule 98 (ops_5)
    ELSEIF           [reduce using rule 100 (ops_5)]
    ELSE             reduce using rule 98 (ops_5)
    ELSE             [reduce using rule 100 (ops_5)]
    PLUS             reduce using rule 98 (ops_5)
    PLUS             [reduce using rule 100 (ops_5)]
    MIN              reduce using rule 98 (ops_5)
    MIN              [reduce using rule 100 (ops_5)]
    MUL              [reduce using rule 98 (ops_5)]
    MUL              [reduce using rule 100 (ops_5)]
    DIV              [reduce using rule 98 (ops_5)]
    DIV              [reduce using rule 100 (ops_5)]
    POW              reduce using rule 98 (ops_5)
    POW              [reduce using rule 100 (ops_5)]
    MOD              [reduce using rule 98 (ops_5)]
    MOD              [reduce using rule 100 (ops_5)]
    EQUAL            reduce using rule 98 (ops_5)
    EQUAL            [reduce using rule 100 (ops_5)]
    LESS_THAN        reduce using rule 98 (ops_5)
    LESS_THAN        [reduce using rule 100 (ops_5)]
    MORE_THAN        reduce using rule 98 (ops_5)
    MORE_THAN        [reduce using rule 100 (ops_5)]
    LESS_EQUAL_THAN  reduce using rule 98 (ops_5)
    LESS_EQUAL_THAN  [reduce using rule 100 (ops_5)]
    MORE_EQUAL_THAN  reduce using rule 98 (ops_5)
    MORE_EQUAL_THAN  [reduce using rule 100 (ops_5)]
    TILDE_EQUAL      reduce using rule 98 (ops_5)
    TILDE_EQUAL      [reduce using rule 100 (ops_5)]
    CONCAT           reduce using rule 98 (ops_5)
    CONCAT           [reduce using rule 100 (ops_5)]
    AND              reduce using rule 98 (ops_5)
    AND              [reduce using rule 100 (ops_5)]
    OR               reduce using rule 98 (ops_5)
    OR               [reduce using rule 100 (ops_5)]
    LOCAL            reduce using rule 98 (ops_5)
    LOCAL            [reduce using rule 100 (ops_5)]
    FUNCTION         reduce using rule 98 (ops_5)
    FUNCTION         [reduce using rule 100 (ops_5)]
    RETURN           reduce using rule 98 (ops_5)
    RETURN           [reduce using rule 100 (ops_5)]
    BREAK            reduce using rule 98 (ops_5)
    BREAK            [reduce using rule 100 (ops_5)]
    NAME             reduce using rule 98 (ops_5)
    NAME             [reduce using rule 100 (ops_5)]
    COMMA            reduce using rule 98 (ops_5)
    COMMA            [reduce using rule 100 (ops_5)]
    SEMI             reduce using rule 98 (ops_5)
    SEMI             [reduce using rule 100 (ops_5)]
    PARA_L           reduce using rule 98 (ops_5)
    PARA_L           [reduce using rule 100 (ops_5)]
    PARA_R           reduce using rule 98 (ops_5)
    PARA_R           [reduce using rule 100 (ops_5)]
    BRACE_R          reduce using rule 98 (ops_5)
    BRACE_R          [reduce using rule 100 (ops_5)]
    BRACK_R          reduce using rule 98 (ops_5)
    BRACK_R          [reduce using rule 100 (ops_5)]
    $default         reduce using rule 98 (ops_5)


State 161

   99 ops_5: ops_5 MIN ops_6 .
  100      | ops_6 .
  101 ops_6: ops_6 . MUL ops_7
  102      | ops_6 . DIV ops_7
  103      | ops_6 . MOD ops_7

    MUL  shift, and go to state 110
    DIV  shift, and go to state 111
    MOD  shift, and go to state 112

    "end of file"    reduce using rule 99 (ops_5)
    "end of file"    [reduce using rule 100 (ops_5)]
    DO               reduce using rule 99 (ops_5)
    DO               [reduce using rule 100 (ops_5)]
    WHILE            reduce using rule 99 (ops_5)
    WHILE            [reduce using rule 100 (ops_5)]
    FOR              reduce using rule 99 (ops_5)
    FOR              [reduce using rule 100 (ops_5)]
    UNTIL            reduce using rule 99 (ops_5)
    UNTIL            [reduce using rule 100 (ops_5)]
    REPEAT           reduce using rule 99 (ops_5)
    REPEAT           [reduce using rule 100 (ops_5)]
    END              reduce using rule 99 (ops_5)
    END              [reduce using rule 100 (ops_5)]
    IF               reduce using rule 99 (ops_5)
    IF               [reduce using rule 100 (ops_5)]
    THEN             reduce using rule 99 (ops_5)
    THEN             [reduce using rule 100 (ops_5)]
    ELSEIF           reduce using rule 99 (ops_5)
    ELSEIF           [reduce using rule 100 (ops_5)]
    ELSE             reduce using rule 99 (ops_5)
    ELSE             [reduce using rule 100 (ops_5)]
    PLUS             reduce using rule 99 (ops_5)
    PLUS             [reduce using rule 100 (ops_5)]
    MIN              reduce using rule 99 (ops_5)
    MIN              [reduce using rule 100 (ops_5)]
    MUL              [reduce using rule 99 (ops_5)]
    MUL              [reduce using rule 100 (ops_5)]
    DIV              [reduce using rule 99 (ops_5)]
    DIV              [reduce using rule 100 (ops_5)]
    POW              reduce using rule 99 (ops_5)
    POW              [reduce using rule 100 (ops_5)]
    MOD              [reduce using rule 99 (ops_5)]
    MOD              [reduce using rule 100 (ops_5)]
    EQUAL            reduce using rule 99 (ops_5)
    EQUAL            [reduce using rule 100 (ops_5)]
    LESS_THAN        reduce using rule 99 (ops_5)
    LESS_THAN        [reduce using rule 100 (ops_5)]
    MORE_THAN        reduce using rule 99 (ops_5)
    MORE_THAN        [reduce using rule 100 (ops_5)]
    LESS_EQUAL_THAN  reduce using rule 99 (ops_5)
    LESS_EQUAL_THAN  [reduce using rule 100 (ops_5)]
    MORE_EQUAL_THAN  reduce using rule 99 (ops_5)
    MORE_EQUAL_THAN  [reduce using rule 100 (ops_5)]
    TILDE_EQUAL      reduce using rule 99 (ops_5)
    TILDE_EQUAL      [reduce using rule 100 (ops_5)]
    CONCAT           reduce using rule 99 (ops_5)
    CONCAT           [reduce using rule 100 (ops_5)]
    AND              reduce using rule 99 (ops_5)
    AND              [reduce using rule 100 (ops_5)]
    OR               reduce using rule 99 (ops_5)
    OR               [reduce using rule 100 (ops_5)]
    LOCAL            reduce using rule 99 (ops_5)
    LOCAL            [reduce using rule 100 (ops_5)]
    FUNCTION         reduce using rule 99 (ops_5)
    FUNCTION         [reduce using rule 100 (ops_5)]
    RETURN           reduce using rule 99 (ops_5)
    RETURN           [reduce using rule 100 (ops_5)]
    BREAK            reduce using rule 99 (ops_5)
    BREAK            [reduce using rule 100 (ops_5)]
    NAME             reduce using rule 99 (ops_5)
    NAME             [reduce using rule 100 (ops_5)]
    COMMA            reduce using rule 99 (ops_5)
    COMMA            [reduce using rule 100 (ops_5)]
    SEMI             reduce using rule 99 (ops_5)
    SEMI             [reduce using rule 100 (ops_5)]
    PARA_L           reduce using rule 99 (ops_5)
    PARA_L           [reduce using rule 100 (ops_5)]
    PARA_R           reduce using rule 99 (ops_5)
    PARA_R           [reduce using rule 100 (ops_5)]
    BRACE_R          reduce using rule 99 (ops_5)
    BRACE_R          [reduce using rule 100 (ops_5)]
    BRACK_R          reduce using rule 99 (ops_5)
    BRACK_R          [reduce using rule 100 (ops_5)]
    $default         reduce using rule 99 (ops_5)


State 162

  101 ops_6: ops_6 MUL ops_7 .
  104      | ops_7 .

    "end of file"    reduce using rule 101 (ops_6)
    "end of file"    [reduce using rule 104 (ops_6)]
    DO               reduce using rule 101 (ops_6)
    DO               [reduce using rule 104 (ops_6)]
    WHILE            reduce using rule 101 (ops_6)
    WHILE            [reduce using rule 104 (ops_6)]
    FOR              reduce using rule 101 (ops_6)
    FOR              [reduce using rule 104 (ops_6)]
    UNTIL            reduce using rule 101 (ops_6)
    UNTIL            [reduce using rule 104 (ops_6)]
    REPEAT           reduce using rule 101 (ops_6)
    REPEAT           [reduce using rule 104 (ops_6)]
    END              reduce using rule 101 (ops_6)
    END              [reduce using rule 104 (ops_6)]
    IF               reduce using rule 101 (ops_6)
    IF               [reduce using rule 104 (ops_6)]
    THEN             reduce using rule 101 (ops_6)
    THEN             [reduce using rule 104 (ops_6)]
    ELSEIF           reduce using rule 101 (ops_6)
    ELSEIF           [reduce using rule 104 (ops_6)]
    ELSE             reduce using rule 101 (ops_6)
    ELSE             [reduce using rule 104 (ops_6)]
    PLUS             reduce using rule 101 (ops_6)
    PLUS             [reduce using rule 104 (ops_6)]
    MIN              reduce using rule 101 (ops_6)
    MIN              [reduce using rule 104 (ops_6)]
    MUL              reduce using rule 101 (ops_6)
    MUL              [reduce using rule 104 (ops_6)]
    DIV              reduce using rule 101 (ops_6)
    DIV              [reduce using rule 104 (ops_6)]
    POW              reduce using rule 101 (ops_6)
    POW              [reduce using rule 104 (ops_6)]
    MOD              reduce using rule 101 (ops_6)
    MOD              [reduce using rule 104 (ops_6)]
    EQUAL            reduce using rule 101 (ops_6)
    EQUAL            [reduce using rule 104 (ops_6)]
    LESS_THAN        reduce using rule 101 (ops_6)
    LESS_THAN        [reduce using rule 104 (ops_6)]
    MORE_THAN        reduce using rule 101 (ops_6)
    MORE_THAN        [reduce using rule 104 (ops_6)]
    LESS_EQUAL_THAN  reduce using rule 101 (ops_6)
    LESS_EQUAL_THAN  [reduce using rule 104 (ops_6)]
    MORE_EQUAL_THAN  reduce using rule 101 (ops_6)
    MORE_EQUAL_THAN  [reduce using rule 104 (ops_6)]
    TILDE_EQUAL      reduce using rule 101 (ops_6)
    TILDE_EQUAL      [reduce using rule 104 (ops_6)]
    CONCAT           reduce using rule 101 (ops_6)
    CONCAT           [reduce using rule 104 (ops_6)]
    AND              reduce using rule 101 (ops_6)
    AND              [reduce using rule 104 (ops_6)]
    OR               reduce using rule 101 (ops_6)
    OR               [reduce using rule 104 (ops_6)]
    LOCAL            reduce using rule 101 (ops_6)
    LOCAL            [reduce using rule 104 (ops_6)]
    FUNCTION         reduce using rule 101 (ops_6)
    FUNCTION         [reduce using rule 104 (ops_6)]
    RETURN           reduce using rule 101 (ops_6)
    RETURN           [reduce using rule 104 (ops_6)]
    BREAK            reduce using rule 101 (ops_6)
    BREAK            [reduce using rule 104 (ops_6)]
    NAME             reduce using rule 101 (ops_6)
    NAME             [reduce using rule 104 (ops_6)]
    COMMA            reduce using rule 101 (ops_6)
    COMMA            [reduce using rule 104 (ops_6)]
    SEMI             reduce using rule 101 (ops_6)
    SEMI             [reduce using rule 104 (ops_6)]
    PARA_L           reduce using rule 101 (ops_6)
    PARA_L           [reduce using rule 104 (ops_6)]
    PARA_R           reduce using rule 101 (ops_6)
    PARA_R           [reduce using rule 104 (ops_6)]
    BRACE_R          reduce using rule 101 (ops_6)
    BRACE_R          [reduce using rule 104 (ops_6)]
    BRACK_R          reduce using rule 101 (ops_6)
    BRACK_R          [reduce using rule 104 (ops_6)]
    $default         reduce using rule 101 (ops_6)


State 163

  102 ops_6: ops_6 DIV ops_7 .
  104      | ops_7 .

    "end of file"    reduce using rule 102 (ops_6)
    "end of file"    [reduce using rule 104 (ops_6)]
    DO               reduce using rule 102 (ops_6)
    DO               [reduce using rule 104 (ops_6)]
    WHILE            reduce using rule 102 (ops_6)
    WHILE            [reduce using rule 104 (ops_6)]
    FOR              reduce using rule 102 (ops_6)
    FOR              [reduce using rule 104 (ops_6)]
    UNTIL            reduce using rule 102 (ops_6)
    UNTIL            [reduce using rule 104 (ops_6)]
    REPEAT           reduce using rule 102 (ops_6)
    REPEAT           [reduce using rule 104 (ops_6)]
    END              reduce using rule 102 (ops_6)
    END              [reduce using rule 104 (ops_6)]
    IF               reduce using rule 102 (ops_6)
    IF               [reduce using rule 104 (ops_6)]
    THEN             reduce using rule 102 (ops_6)
    THEN             [reduce using rule 104 (ops_6)]
    ELSEIF           reduce using rule 102 (ops_6)
    ELSEIF           [reduce using rule 104 (ops_6)]
    ELSE             reduce using rule 102 (ops_6)
    ELSE             [reduce using rule 104 (ops_6)]
    PLUS             reduce using rule 102 (ops_6)
    PLUS             [reduce using rule 104 (ops_6)]
    MIN              reduce using rule 102 (ops_6)
    MIN              [reduce using rule 104 (ops_6)]
    MUL              reduce using rule 102 (ops_6)
    MUL              [reduce using rule 104 (ops_6)]
    DIV              reduce using rule 102 (ops_6)
    DIV              [reduce using rule 104 (ops_6)]
    POW              reduce using rule 102 (ops_6)
    POW              [reduce using rule 104 (ops_6)]
    MOD              reduce using rule 102 (ops_6)
    MOD              [reduce using rule 104 (ops_6)]
    EQUAL            reduce using rule 102 (ops_6)
    EQUAL            [reduce using rule 104 (ops_6)]
    LESS_THAN        reduce using rule 102 (ops_6)
    LESS_THAN        [reduce using rule 104 (ops_6)]
    MORE_THAN        reduce using rule 102 (ops_6)
    MORE_THAN        [reduce using rule 104 (ops_6)]
    LESS_EQUAL_THAN  reduce using rule 102 (ops_6)
    LESS_EQUAL_THAN  [reduce using rule 104 (ops_6)]
    MORE_EQUAL_THAN  reduce using rule 102 (ops_6)
    MORE_EQUAL_THAN  [reduce using rule 104 (ops_6)]
    TILDE_EQUAL      reduce using rule 102 (ops_6)
    TILDE_EQUAL      [reduce using rule 104 (ops_6)]
    CONCAT           reduce using rule 102 (ops_6)
    CONCAT           [reduce using rule 104 (ops_6)]
    AND              reduce using rule 102 (ops_6)
    AND              [reduce using rule 104 (ops_6)]
    OR               reduce using rule 102 (ops_6)
    OR               [reduce using rule 104 (ops_6)]
    LOCAL            reduce using rule 102 (ops_6)
    LOCAL            [reduce using rule 104 (ops_6)]
    FUNCTION         reduce using rule 102 (ops_6)
    FUNCTION         [reduce using rule 104 (ops_6)]
    RETURN           reduce using rule 102 (ops_6)
    RETURN           [reduce using rule 104 (ops_6)]
    BREAK            reduce using rule 102 (ops_6)
    BREAK            [reduce using rule 104 (ops_6)]
    NAME             reduce using rule 102 (ops_6)
    NAME             [reduce using rule 104 (ops_6)]
    COMMA            reduce using rule 102 (ops_6)
    COMMA            [reduce using rule 104 (ops_6)]
    SEMI             reduce using rule 102 (ops_6)
    SEMI             [reduce using rule 104 (ops_6)]
    PARA_L           reduce using rule 102 (ops_6)
    PARA_L           [reduce using rule 104 (ops_6)]
    PARA_R           reduce using rule 102 (ops_6)
    PARA_R           [reduce using rule 104 (ops_6)]
    BRACE_R          reduce using rule 102 (ops_6)
    BRACE_R          [reduce using rule 104 (ops_6)]
    BRACK_R          reduce using rule 102 (ops_6)
    BRACK_R          [reduce using rule 104 (ops_6)]
    $default         reduce using rule 102 (ops_6)


State 164

  103 ops_6: ops_6 MOD ops_7 .
  104      | ops_7 .

    "end of file"    reduce using rule 103 (ops_6)
    "end of file"    [reduce using rule 104 (ops_6)]
    DO               reduce using rule 103 (ops_6)
    DO               [reduce using rule 104 (ops_6)]
    WHILE            reduce using rule 103 (ops_6)
    WHILE            [reduce using rule 104 (ops_6)]
    FOR              reduce using rule 103 (ops_6)
    FOR              [reduce using rule 104 (ops_6)]
    UNTIL            reduce using rule 103 (ops_6)
    UNTIL            [reduce using rule 104 (ops_6)]
    REPEAT           reduce using rule 103 (ops_6)
    REPEAT           [reduce using rule 104 (ops_6)]
    END              reduce using rule 103 (ops_6)
    END              [reduce using rule 104 (ops_6)]
    IF               reduce using rule 103 (ops_6)
    IF               [reduce using rule 104 (ops_6)]
    THEN             reduce using rule 103 (ops_6)
    THEN             [reduce using rule 104 (ops_6)]
    ELSEIF           reduce using rule 103 (ops_6)
    ELSEIF           [reduce using rule 104 (ops_6)]
    ELSE             reduce using rule 103 (ops_6)
    ELSE             [reduce using rule 104 (ops_6)]
    PLUS             reduce using rule 103 (ops_6)
    PLUS             [reduce using rule 104 (ops_6)]
    MIN              reduce using rule 103 (ops_6)
    MIN              [reduce using rule 104 (ops_6)]
    MUL              reduce using rule 103 (ops_6)
    MUL              [reduce using rule 104 (ops_6)]
    DIV              reduce using rule 103 (ops_6)
    DIV              [reduce using rule 104 (ops_6)]
    POW              reduce using rule 103 (ops_6)
    POW              [reduce using rule 104 (ops_6)]
    MOD              reduce using rule 103 (ops_6)
    MOD              [reduce using rule 104 (ops_6)]
    EQUAL            reduce using rule 103 (ops_6)
    EQUAL            [reduce using rule 104 (ops_6)]
    LESS_THAN        reduce using rule 103 (ops_6)
    LESS_THAN        [reduce using rule 104 (ops_6)]
    MORE_THAN        reduce using rule 103 (ops_6)
    MORE_THAN        [reduce using rule 104 (ops_6)]
    LESS_EQUAL_THAN  reduce using rule 103 (ops_6)
    LESS_EQUAL_THAN  [reduce using rule 104 (ops_6)]
    MORE_EQUAL_THAN  reduce using rule 103 (ops_6)
    MORE_EQUAL_THAN  [reduce using rule 104 (ops_6)]
    TILDE_EQUAL      reduce using rule 103 (ops_6)
    TILDE_EQUAL      [reduce using rule 104 (ops_6)]
    CONCAT           reduce using rule 103 (ops_6)
    CONCAT           [reduce using rule 104 (ops_6)]
    AND              reduce using rule 103 (ops_6)
    AND              [reduce using rule 104 (ops_6)]
    OR               reduce using rule 103 (ops_6)
    OR               [reduce using rule 104 (ops_6)]
    LOCAL            reduce using rule 103 (ops_6)
    LOCAL            [reduce using rule 104 (ops_6)]
    FUNCTION         reduce using rule 103 (ops_6)
    FUNCTION         [reduce using rule 104 (ops_6)]
    RETURN           reduce using rule 103 (ops_6)
    RETURN           [reduce using rule 104 (ops_6)]
    BREAK            reduce using rule 103 (ops_6)
    BREAK            [reduce using rule 104 (ops_6)]
    NAME             reduce using rule 103 (ops_6)
    NAME             [reduce using rule 104 (ops_6)]
    COMMA            reduce using rule 103 (ops_6)
    COMMA            [reduce using rule 104 (ops_6)]
    SEMI             reduce using rule 103 (ops_6)
    SEMI             [reduce using rule 104 (ops_6)]
    PARA_L           reduce using rule 103 (ops_6)
    PARA_L           [reduce using rule 104 (ops_6)]
    PARA_R           reduce using rule 103 (ops_6)
    PARA_R           [reduce using rule 104 (ops_6)]
    BRACE_R          reduce using rule 103 (ops_6)
    BRACE_R          [reduce using rule 104 (ops_6)]
    BRACK_R          reduce using rule 103 (ops_6)
    BRACK_R          [reduce using rule 104 (ops_6)]
    $default         reduce using rule 103 (ops_6)


State 165

  109 ops_8: ops_8 POW ops_9 .
  110      | ops_9 .

    "end of file"    reduce using rule 109 (ops_8)
    "end of file"    [reduce using rule 110 (ops_8)]
    DO               reduce using rule 109 (ops_8)
    DO               [reduce using rule 110 (ops_8)]
    WHILE            reduce using rule 109 (ops_8)
    WHILE            [reduce using rule 110 (ops_8)]
    FOR              reduce using rule 109 (ops_8)
    FOR              [reduce using rule 110 (ops_8)]
    UNTIL            reduce using rule 109 (ops_8)
    UNTIL            [reduce using rule 110 (ops_8)]
    REPEAT           reduce using rule 109 (ops_8)
    REPEAT           [reduce using rule 110 (ops_8)]
    END              reduce using rule 109 (ops_8)
    END              [reduce using rule 110 (ops_8)]
    IF               reduce using rule 109 (ops_8)
    IF               [reduce using rule 110 (ops_8)]
    THEN             reduce using rule 109 (ops_8)
    THEN             [reduce using rule 110 (ops_8)]
    ELSEIF           reduce using rule 109 (ops_8)
    ELSEIF           [reduce using rule 110 (ops_8)]
    ELSE             reduce using rule 109 (ops_8)
    ELSE             [reduce using rule 110 (ops_8)]
    PLUS             reduce using rule 109 (ops_8)
    PLUS             [reduce using rule 110 (ops_8)]
    MIN              reduce using rule 109 (ops_8)
    MIN              [reduce using rule 110 (ops_8)]
    MUL              reduce using rule 109 (ops_8)
    MUL              [reduce using rule 110 (ops_8)]
    DIV              reduce using rule 109 (ops_8)
    DIV              [reduce using rule 110 (ops_8)]
    POW              reduce using rule 109 (ops_8)
    POW              [reduce using rule 110 (ops_8)]
    MOD              reduce using rule 109 (ops_8)
    MOD              [reduce using rule 110 (ops_8)]
    EQUAL            reduce using rule 109 (ops_8)
    EQUAL            [reduce using rule 110 (ops_8)]
    LESS_THAN        reduce using rule 109 (ops_8)
    LESS_THAN        [reduce using rule 110 (ops_8)]
    MORE_THAN        reduce using rule 109 (ops_8)
    MORE_THAN        [reduce using rule 110 (ops_8)]
    LESS_EQUAL_THAN  reduce using rule 109 (ops_8)
    LESS_EQUAL_THAN  [reduce using rule 110 (ops_8)]
    MORE_EQUAL_THAN  reduce using rule 109 (ops_8)
    MORE_EQUAL_THAN  [reduce using rule 110 (ops_8)]
    TILDE_EQUAL      reduce using rule 109 (ops_8)
    TILDE_EQUAL      [reduce using rule 110 (ops_8)]
    CONCAT           reduce using rule 109 (ops_8)
    CONCAT           [reduce using rule 110 (ops_8)]
    AND              reduce using rule 109 (ops_8)
    AND              [reduce using rule 110 (ops_8)]
    OR               reduce using rule 109 (ops_8)
    OR               [reduce using rule 110 (ops_8)]
    LOCAL            reduce using rule 109 (ops_8)
    LOCAL            [reduce using rule 110 (ops_8)]
    FUNCTION         reduce using rule 109 (ops_8)
    FUNCTION         [reduce using rule 110 (ops_8)]
    RETURN           reduce using rule 109 (ops_8)
    RETURN           [reduce using rule 110 (ops_8)]
    BREAK            reduce using rule 109 (ops_8)
    BREAK            [reduce using rule 110 (ops_8)]
    NAME             reduce using rule 109 (ops_8)
    NAME             [reduce using rule 110 (ops_8)]
    COMMA            reduce using rule 109 (ops_8)
    COMMA            [reduce using rule 110 (ops_8)]
    SEMI             reduce using rule 109 (ops_8)
    SEMI             [reduce using rule 110 (ops_8)]
    PARA_L           reduce using rule 109 (ops_8)
    PARA_L           [reduce using rule 110 (ops_8)]
    PARA_R           reduce using rule 109 (ops_8)
    PARA_R           [reduce using rule 110 (ops_8)]
    BRACE_R          reduce using rule 109 (ops_8)
    BRACE_R          [reduce using rule 110 (ops_8)]
    BRACK_R          reduce using rule 109 (ops_8)
    BRACK_R          [reduce using rule 110 (ops_8)]
    $default         reduce using rule 109 (ops_8)


State 166

   20 stat: FOR namelist IN explist . DO block END
   45 explist: explist . COMMA exp

    DO     shift, and go to state 189
    COMMA  shift, and go to state 124


State 167

   42 namelist: namelist COMMA name .

    $default  reduce using rule 42 (namelist)


State 168

   18 stat: FOR name ASSIGN exp . COMMA exp DO block END
   19     | FOR name ASSIGN exp . COMMA exp COMMA exp DO block END
  111 ops_9: exp .

    COMMA  shift, and go to state 190

    COMMA     [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 169

   16 stat: REPEAT block UNTIL exp .
  111 ops_9: exp .

    "end of file"    reduce using rule 16 (stat)
    "end of file"    [reduce using rule 111 (ops_9)]
    DO               reduce using rule 16 (stat)
    DO               [reduce using rule 111 (ops_9)]
    WHILE            reduce using rule 16 (stat)
    WHILE            [reduce using rule 111 (ops_9)]
    FOR              reduce using rule 16 (stat)
    FOR              [reduce using rule 111 (ops_9)]
    UNTIL            reduce using rule 16 (stat)
    UNTIL            [reduce using rule 111 (ops_9)]
    REPEAT           reduce using rule 16 (stat)
    REPEAT           [reduce using rule 111 (ops_9)]
    END              reduce using rule 16 (stat)
    END              [reduce using rule 111 (ops_9)]
    IF               reduce using rule 16 (stat)
    IF               [reduce using rule 111 (ops_9)]
    ELSEIF           reduce using rule 16 (stat)
    ELSEIF           [reduce using rule 111 (ops_9)]
    ELSE             reduce using rule 16 (stat)
    ELSE             [reduce using rule 111 (ops_9)]
    PLUS             reduce using rule 111 (ops_9)
    MIN              reduce using rule 111 (ops_9)
    MUL              reduce using rule 111 (ops_9)
    DIV              reduce using rule 111 (ops_9)
    POW              reduce using rule 111 (ops_9)
    MOD              reduce using rule 111 (ops_9)
    EQUAL            reduce using rule 111 (ops_9)
    LESS_THAN        reduce using rule 111 (ops_9)
    MORE_THAN        reduce using rule 111 (ops_9)
    LESS_EQUAL_THAN  reduce using rule 111 (ops_9)
    MORE_EQUAL_THAN  reduce using rule 111 (ops_9)
    TILDE_EQUAL      reduce using rule 111 (ops_9)
    CONCAT           reduce using rule 111 (ops_9)
    AND              reduce using rule 111 (ops_9)
    OR               reduce using rule 111 (ops_9)
    LOCAL            reduce using rule 16 (stat)
    LOCAL            [reduce using rule 111 (ops_9)]
    FUNCTION         reduce using rule 16 (stat)
    FUNCTION         [reduce using rule 111 (ops_9)]
    RETURN           reduce using rule 16 (stat)
    RETURN           [reduce using rule 111 (ops_9)]
    BREAK            reduce using rule 16 (stat)
    BREAK            [reduce using rule 111 (ops_9)]
    NAME             reduce using rule 16 (stat)
    NAME             [reduce using rule 111 (ops_9)]
    SEMI             reduce using rule 16 (stat)
    SEMI             [reduce using rule 111 (ops_9)]
    PARA_L           reduce using rule 16 (stat)
    PARA_L           [reduce using rule 111 (ops_9)]
    $default         reduce using rule 16 (stat)


State 170

   25 ifexp: IF exp THEN block .

    $default  reduce using rule 25 (ifexp)


State 171

   22 stat: LOCAL FUNCTION name funcbody .

    $default  reduce using rule 22 (stat)


State 172

   24 stat: LOCAL namelist ASSIGN explist .
   45 explist: explist . COMMA exp

    COMMA  shift, and go to state 124

    $default  reduce using rule 24 (stat)


State 173

   35 funcname: funcname DOT name .

    $default  reduce using rule 35 (funcname)


State 174

   33 funcnamelist: funcname COLON name .

    $default  reduce using rule 33 (funcnamelist)


State 175

   45 explist: explist COMMA exp .
  111 ops_9: exp .

    "end of file"    reduce using rule 45 (explist)
    "end of file"    [reduce using rule 111 (ops_9)]
    DO               reduce using rule 45 (explist)
    DO               [reduce using rule 111 (ops_9)]
    WHILE            reduce using rule 45 (explist)
    WHILE            [reduce using rule 111 (ops_9)]
    FOR              reduce using rule 45 (explist)
    FOR              [reduce using rule 111 (ops_9)]
    UNTIL            reduce using rule 45 (explist)
    UNTIL            [reduce using rule 111 (ops_9)]
    REPEAT           reduce using rule 45 (explist)
    REPEAT           [reduce using rule 111 (ops_9)]
    END              reduce using rule 45 (explist)
    END              [reduce using rule 111 (ops_9)]
    IF               reduce using rule 45 (explist)
    IF               [reduce using rule 111 (ops_9)]
    ELSEIF           reduce using rule 45 (explist)
    ELSEIF           [reduce using rule 111 (ops_9)]
    ELSE             reduce using rule 45 (explist)
    ELSE             [reduce using rule 111 (ops_9)]
    PLUS             reduce using rule 111 (ops_9)
    MIN              reduce using rule 111 (ops_9)
    MUL              reduce using rule 111 (ops_9)
    DIV              reduce using rule 111 (ops_9)
    POW              reduce using rule 111 (ops_9)
    MOD              reduce using rule 111 (ops_9)
    EQUAL            reduce using rule 111 (ops_9)
    LESS_THAN        reduce using rule 111 (ops_9)
    MORE_THAN        reduce using rule 111 (ops_9)
    LESS_EQUAL_THAN  reduce using rule 111 (ops_9)
    MORE_EQUAL_THAN  reduce using rule 111 (ops_9)
    TILDE_EQUAL      reduce using rule 111 (ops_9)
    CONCAT           reduce using rule 111 (ops_9)
    AND              reduce using rule 111 (ops_9)
    OR               reduce using rule 111 (ops_9)
    LOCAL            reduce using rule 45 (explist)
    LOCAL            [reduce using rule 111 (ops_9)]
    FUNCTION         reduce using rule 45 (explist)
    FUNCTION         [reduce using rule 111 (ops_9)]
    RETURN           reduce using rule 45 (explist)
    RETURN           [reduce using rule 111 (ops_9)]
    BREAK            reduce using rule 45 (explist)
    BREAK            [reduce using rule 111 (ops_9)]
    NAME             reduce using rule 45 (explist)
    NAME             [reduce using rule 111 (ops_9)]
    COMMA            reduce using rule 45 (explist)
    COMMA            [reduce using rule 111 (ops_9)]
    SEMI             reduce using rule 45 (explist)
    SEMI             [reduce using rule 111 (ops_9)]
    PARA_L           reduce using rule 45 (explist)
    PARA_L           [reduce using rule 111 (ops_9)]
    PARA_R           reduce using rule 45 (explist)
    PARA_R           [reduce using rule 111 (ops_9)]
    $default         reduce using rule 45 (explist)


State 176

   29 elseif: ELSEIF exp THEN . block

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 191
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 177

   30 optelse: ELSE block .

    $default  reduce using rule 30 (optelse)


State 178

   17 stat: ifexp optelseif optelse END .

    $default  reduce using rule 17 (stat)


State 179

   60 functioncall: prefixexp COLON name args .

    $default  reduce using rule 60 (functioncall)


State 180

   62 args: PARA_L explist PARA_R .

    $default  reduce using rule 62 (args)


State 181

   39 var: prefixexp BRACK_L exp BRACK_R .

    $default  reduce using rule 39 (var)


State 182

   67 funcbody: PARA_L PARA_R block . END

    END  shift, and go to state 192


State 183

   42 namelist: namelist COMMA . name
   69 parlist: namelist COMMA . TDOT

    TDOT  shift, and go to state 193
    NAME  shift, and go to state 10

    name  go to state 167


State 184

   66 funcbody: PARA_L parlist PARA_R . block END

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 194
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 185

   76 field: BRACK_L exp BRACK_R . ASSIGN exp

    ASSIGN  shift, and go to state 195


State 186

   77 field: name ASSIGN exp .
  111 ops_9: exp .

    COMMA     reduce using rule 77 (field)
    COMMA     [reduce using rule 111 (ops_9)]
    SEMI      reduce using rule 77 (field)
    SEMI      [reduce using rule 111 (ops_9)]
    BRACE_R   reduce using rule 77 (field)
    BRACE_R   [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 187

   75 fieldlist: fieldlist fieldsep field .

    $default  reduce using rule 75 (fieldlist)


State 188

   15 stat: WHILE exp DO block END .

    $default  reduce using rule 15 (stat)


State 189

   20 stat: FOR namelist IN explist DO . block END

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 196
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 190

   18 stat: FOR name ASSIGN exp COMMA . exp DO block END
   19     | FOR name ASSIGN exp COMMA . exp COMMA exp DO block END

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 197
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 191

   29 elseif: ELSEIF exp THEN block .

    $default  reduce using rule 29 (elseif)


State 192

   67 funcbody: PARA_L PARA_R block END .

    $default  reduce using rule 67 (funcbody)


State 193

   69 parlist: namelist COMMA TDOT .

    $default  reduce using rule 69 (parlist)


State 194

   66 funcbody: PARA_L parlist PARA_R block . END

    END  shift, and go to state 198


State 195

   76 field: BRACK_L exp BRACK_R ASSIGN . exp

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 199
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 196

   20 stat: FOR namelist IN explist DO block . END

    END  shift, and go to state 200


State 197

   18 stat: FOR name ASSIGN exp COMMA exp . DO block END
   19     | FOR name ASSIGN exp COMMA exp . COMMA exp DO block END
  111 ops_9: exp .

    DO     shift, and go to state 201
    COMMA  shift, and go to state 202

    DO        [reduce using rule 111 (ops_9)]
    COMMA     [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 198

   66 funcbody: PARA_L parlist PARA_R block END .

    $default  reduce using rule 66 (funcbody)


State 199

   76 field: BRACK_L exp BRACK_R ASSIGN exp .
  111 ops_9: exp .

    COMMA     reduce using rule 76 (field)
    COMMA     [reduce using rule 111 (ops_9)]
    SEMI      reduce using rule 76 (field)
    SEMI      [reduce using rule 111 (ops_9)]
    BRACE_R   reduce using rule 76 (field)
    BRACE_R   [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 200

   20 stat: FOR namelist IN explist DO block END .

    $default  reduce using rule 20 (stat)


State 201

   18 stat: FOR name ASSIGN exp COMMA exp DO . block END

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 203
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 202

   19 stat: FOR name ASSIGN exp COMMA exp COMMA . exp DO block END

    MIN       shift, and go to state 24
    LEN       shift, and go to state 25
    NOT       shift, and go to state 26
    FUNCTION  shift, and go to state 27
    NIL       shift, and go to state 28
    FALSE     shift, and go to state 29
    TRUE      shift, and go to state 30
    NUMBER    shift, and go to state 31
    STRING    shift, and go to state 32
    TDOT      shift, and go to state 33
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11
    BRACE_L   shift, and go to state 34

    var               go to state 35
    name              go to state 20
    exp               go to state 204
    prefixexp         go to state 37
    functioncall      go to state 38
    function          go to state 39
    tableconstructor  go to state 40
    string            go to state 41
    ops               go to state 42
    ops_1             go to state 43
    ops_2             go to state 44
    ops_3             go to state 45
    ops_4             go to state 46
    ops_5             go to state 47
    ops_6             go to state 48
    ops_7             go to state 49
    ops_8             go to state 50
    ops_9             go to state 51


State 203

   18 stat: FOR name ASSIGN exp COMMA exp DO block . END

    END  shift, and go to state 205


State 204

   19 stat: FOR name ASSIGN exp COMMA exp COMMA exp . DO block END
  111 ops_9: exp .

    DO  shift, and go to state 206

    DO        [reduce using rule 111 (ops_9)]
    $default  reduce using rule 111 (ops_9)


State 205

   18 stat: FOR name ASSIGN exp COMMA exp DO block END .

    $default  reduce using rule 18 (stat)


State 206

   19 stat: FOR name ASSIGN exp COMMA exp COMMA exp DO . block END

    DO        shift, and go to state 1
    WHILE     shift, and go to state 2
    FOR       shift, and go to state 3
    REPEAT    shift, and go to state 4
    IF        shift, and go to state 5
    LOCAL     shift, and go to state 6
    FUNCTION  shift, and go to state 7
    RETURN    shift, and go to state 8
    BREAK     shift, and go to state 9
    NAME      shift, and go to state 10
    PARA_L    shift, and go to state 11

    block         go to state 207
    chunk         go to state 13
    optchunk      go to state 14
    laststat      go to state 15
    stat          go to state 16
    ifexp         go to state 17
    varlist       go to state 18
    var           go to state 19
    name          go to state 20
    prefixexp     go to state 21
    functioncall  go to state 22


State 207

   19 stat: FOR name ASSIGN exp COMMA exp COMMA exp DO block . END

    END  shift, and go to state 208


State 208

   19 stat: FOR name ASSIGN exp COMMA exp COMMA exp DO block END .

    $default  reduce using rule 19 (stat)
